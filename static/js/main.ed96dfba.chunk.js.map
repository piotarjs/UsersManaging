{"version":3,"sources":["database.tsx","module.tsx","routes/AddUserToFirebase/components/About/About.tsx","routes/AddUserToFirebase/components/About/index.tsx","shared/InputText/InputText.tsx","shared/InputText/index.tsx","shared/UploadFile/UploadFile.tsx","shared/UploadFile/index.tsx","validate.tsx","routes/AddUserToFirebase/components/AddUserForm/AddUserForm.tsx","routes/AddUserToFirebase/components/AddUserForm/index.tsx","routes/AddUserToFirebase/components/EditUser/EditUser.tsx","routes/AddUserToFirebase/components/EditUser/index.tsx","routes/AddUserToFirebase/components/ShowUsersList/ShowUsersList.tsx","routes/AddUserToFirebase/components/ShowUsersList/index.tsx","routes/AddUserToFirebase/AddUserToFirebase.tsx","routes/AddUserToFirebase/index.tsx","index.tsx"],"names":["index_cjs","apiKey","authDomain","databaseURL","messagingSenderId","projectId","storageBucket","database_base","database_storage","MAIN_URL","baseInitialState","fileName","isError","isLoading","isUploading","listElementIsEdited","listElementToDelete","listElementToEdit","sortColumn","sortingOrder","user","users","usersFiltered","addUser","firstName","key","secondName","uploadFile","usersRef","pictureRef","undefined","Date","now","toString","child","put","then","snapshot","metadata","name","getDownloadURL","url","set","update","deleteUserFromFirebase","dispatch","getState","base","storage","ref","redirect","remove","delete","on","data","type","deleteSuccess","val","error","message","deleteError","getError","editUser","userData","editSuccess","editError","redirectSuccess","Object","lib","highligthChosenElement","detailsSuccess","detailsError","onDeleteHoverSuccess","onDeleteHoverError","onEditHoverSuccess","firebaseReducer","type_to_reducer_lib_default","CREATE","FULFILLED","state","assign","usersSorted","PENDING","REJECTED","RETRIEVE","EDIT","DELETE","UPDATE","DETAILS","DELETE_HOVER","EDIT_HOVER","FILTER","SORT","GET_FILE_NAME","components_About_About","react","[object Object]","this","onHighlightBack","props","deleteUser","userKey","mdbreact","className","color","size","onClick","xs","sm","md","src","alt","mapDispatchToProps","PLACEHOLDER","components_About","react_redux_es","firebase","InputText_InputText","input","meta","submitFailed","placeholder","autoComplete","shared_InputText","UploadFile_UploadFile","_a","getFileName","_b","value","tslib_es6","id","onChange","accept","UploadFile_mapDispatchToProps","target","getFileNameSuccess","length","slice","shared_UploadFile","validate","errors","match","AddUserForm_AddUserForm","reduxForm","form","handleSubmit","addUserToFirebase","submitting","onSubmit","Field","component","disabled","AddUserForm_mapDispatchToProps","async","addSuccess","redux_form_es","addError","components_AddUserForm","components_EditUser_EditUser","enableReinitialize","updateUserInFirebase","hidden","EditUser_mapDispatchToProps","updateSuccess","updateError","components_EditUser","initialValues","components_ShowUsersList_ShowUsersList","onDelete","e","stopPropagation","onEdit","onDetails","highlightElementToDelete","onDeleteHoverHighlight","highlightElementToEdit","onEditHoverHighlight","isActive","classnames","bg-danger","bg-primary","isSorted","sortedByColumn","ml-1","sortList","columnName","sortUsersList","title","values","map","icon","onMouseEnter","onMouseLeave","ShowUsersList_mapDispatchToProps","sort","a","b","sortBy","sortSuccess","sortError","components_ShowUsersList","src_routes_AddUserToFirebase_AddUserToFirebase","filterList","filterUsersList","getUserFromFirebase","params","lg","react_loaders_default","active","action","AddUserToFirebase_mapDispatchToProps","phrase","lowerCasePhrase","toLowerCase","filteredList","filter","includes","forEach","filterSuccess","filterError","getSuccess","once","routes_AddUserToFirebase","src_history","es","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","redux","store","history","reducer","router","src_module","redux_thunk_es","withExtraArgument","react_dom","Switch","Route","path","document","querySelector"],"mappings":"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","file":"static/js/main.ed96dfba.chunk.js","sourcesContent":["import * as firebase from 'firebase'\n\nconst config = {\n  apiKey: \"AIzaSyDaBb-y1E-RB70QGIYnyz2xI_8ZDkhoC1c\",\n  authDomain: \"reactlistwithfirebase.firebaseapp.com\",\n  databaseURL: \"https://reactlistwithfirebase.firebaseio.com\",\n  messagingSenderId: \"164262586929\",\n  projectId: \"reactlistwithfirebase\",\n  storageBucket: \"reactlistwithfirebase.appspot.com\"\n};\nfirebase.initializeApp(config);\nexport const base = firebase.database();\nexport const storage = firebase.storage();\n","import { connectRouter, push } from 'connected-react-router';\nimport { History } from 'history';\nimport { Action, combineReducers } from 'redux';\nimport { reducer as formReducer, reset } from 'redux-form';\nimport { ThunkAction } from 'redux-thunk';\nimport typeToReducer from 'type-to-reducer';\nimport { ExtraArgument, SortByColumn, SortColumn, SortingOrder, UserDetails, UsersList } from './interfaces';\n\n// ----- Definicja stałych -----\n\nconst INITIAL_FILENAME = 'Wybierz plik';\nexport const MAIN_URL = 'UsersManaging';\n\n// -----------------------------\n\n// ---------------- Interfejsy i typy ----------------\n\nexport interface State {\n  firebase: {\n    fileName: string,\n    listElementIsEdited: string,\n    isError: false,\n    isLoading: false,\n    isUploading: false,\n    listElementToDelete: string,\n    listElementToEdit: string,\n    sortColumn: SortColumn,\n    sortingOrder: SortingOrder,\n    user: UserDetails['user'],\n    users: UsersList['users'],\n    usersFiltered: UsersList['users'],\n    usersSorted: UsersList['users'],\n  }\n};\n\ninterface AddUserToFirebase { firstName: string, key: string, secondName: string, uploadFile?: FileList };\n\ntype FirebaseReducer = State['firebase'];\n\ntype ResetFileName = 'Wybierz plik';\n\ntype Thunk = ThunkAction<void, State, ExtraArgument, Action>;\n\n// ---------------------------------------------------\n\n// ----------------- Definicja akcji -----------------\n\nconst PENDING = 'PENDING';\nconst REJECTED = 'REJECTED';\nconst FULFILLED = 'FULFILLED';\nconst CREATE = 'CREATE';\nconst RETRIEVE = 'RETRIEVE';\nconst DELETE = 'DELETE';\nconst EDIT = 'EDIT';\nconst UPDATE = 'UPDATE';\nconst DETAILS = 'DETAILS';\nconst DELETE_HOVER = 'DELETE_HOVER';\nconst EDIT_HOVER = 'EDIT_HOVER';\nconst FILTER = 'FILTER';\nconst SORT = 'SORT';\nconst GET_FILE_NAME = 'GET_FILE_NAME';\n\n// ---------------------------------------------------\n\n// --------------- Inicjalizacja stanu ---------------\n\nconst baseInitialState = {\n  fileName: INITIAL_FILENAME,\n  isError: false,\n  isLoading: false,\n  isUploading: false,\n  listElementIsEdited: '',\n  listElementToDelete: '',\n  listElementToEdit: '',\n  sortColumn: {},\n  sortingOrder: 'asc',\n  user: {},\n  users: {},\n  usersFiltered: {}\n};\n\n// ----------------------------------------------------\n\n// --- Wstawianie pliku do Storage Firebase oraz zapis rekordu do Database Firebase ---\n\nconst addUser = (\n  { firstName, key, secondName, uploadFile }: AddUserToFirebase, \n  usersRef: firebase.database.Reference, \n  pictureRef: firebase.storage.Reference\n  ) => {\n  if (key === undefined) {\n    key = Date.now().toString();\n  }\n  uploadFile\n  ?\n  pictureRef.child(key).put(uploadFile[0]).then((snapshot) => {\n    pictureRef.child(snapshot.metadata.name).getDownloadURL().then((url: string) => {\n      usersRef.child(key).set({\n        fileName: uploadFile[0].name,\n        firstName,\n        key,\n        secondName,\n        url\n      })\n    })\n  })\n  :\n  usersRef.child(key).update({\n    firstName,\n    secondName,\n  })\n \n}\n\n// ------------------------------------------------------------------------------------\n\n// ----------- Dodawanie użytkownika do bazy -----------\n\nexport const addPending = () => ({\n  type: `${CREATE}_${PENDING}`\n});\n\nexport const addSuccess = (users: FirebaseReducer['users']) => ({\n  type: `${CREATE}_${FULFILLED}`,\n  users\n});\n\nexport const addError = (error: Error) => ({\n  error: error.message,\n  type: `${CREATE}_${REJECTED}`\n});\n\nexport const addUserToFirebase = (user: AddUserToFirebase): Thunk =>\n  async (dispatch, getState, { base, storage }) => {\n    dispatch(addPending());\n    const usersRef = base.ref('users');\n    const pictureRef = storage.ref('personalPicture');\n    try {\n      await addUser(user, usersRef, pictureRef);\n      usersRef.on('value', (data) => {\n        if (data) {\n          dispatch(addSuccess(data.val()))\n        }\n      });\n      dispatch(reset('List'));\n      dispatch(redirect(`/${MAIN_URL}`));\n    } catch (error) {\n      dispatch(addError(error));\n    };\n  };\n\n// ---------------------------------------------------\n\n// ----------- Usunięcie użytkownika z bazy -----------\n\nexport const deleteSuccess = (users: FirebaseReducer['users']) => ({\n  type: `${DELETE}_${FULFILLED}`,\n  users\n});\n\nexport const deleteError = (error: Error) => ({\n  error: error.message,\n  type: `${DELETE}_${REJECTED}`\n});\n\nexport const deleteUserFromFirebase = (key: string): Thunk =>\n  (dispatch, getState, { base, storage }) => {\n    const usersRef = base.ref('users');\n    const pictureRef = storage.ref('personalPicture');\n    try {\n      dispatch(redirect(`/${MAIN_URL}`));\n      usersRef.child(`${key}`).remove().then(\n        () => pictureRef.child(`${key}`).delete().then(\n          () => usersRef.on('value', (data) => {\n            if (data) {\n              dispatch(deleteSuccess(data.val()))\n            }\n          })\n        )\n      );\n    } catch (error) {\n      dispatch(deleteError(error));\n    };\n  };\n\n// ---------------------------------------------------\n\n// ------- Pobranie listy użytkowników z bazy -------\n\nexport const getPending = () => ({\n  type: `${RETRIEVE}_${PENDING}`\n});\n\nexport const getSuccess = (users: FirebaseReducer['users']) => ({\n  type: `${RETRIEVE}_${FULFILLED}`,\n  users\n});\n\nexport const getError = (error: Error) => ({\n  error: error.message,\n  type: `${RETRIEVE}_${REJECTED}`,\n});\n\nexport const getUserFromFirebase = (): Thunk => async (dispatch, getState, { base }) => {\n  dispatch(getPending());\n  try {\n    const users = await base.ref('users').once('value');\n    dispatch(getSuccess(users.val()));\n  } catch (error) {\n    dispatch(getError(error));\n  };\n};\n\n// --------------------------------------------------\n\n// --------- Filtrowanie listy użytkowników ---------\n\nexport const filterPending = () => ({\n  type: `${FILTER}_${PENDING}`\n});\n\nexport const filterSuccess = (usersFiltered: FirebaseReducer['users'], sortColumn: SortColumn) => ({\n  sortColumn,\n  type: `${FILTER}_${FULFILLED}`,\n  usersFiltered,\n});\n\nexport const filterError = (error: Error) => ({\n  error: error.message,\n  type: `${FILTER}_${REJECTED}`,\n});\n\nexport const filterUsersList = (\nusersSorted: FirebaseReducer['users'], \nphrase: string): Thunk => \nasync (dispatch) => \n{\n  dispatch(filterPending());\n  const lowerCasePhrase = phrase.toLowerCase();\n  try {    \n    const filteredList = Object.values(usersSorted).filter(({firstName, secondName}) => \n    firstName.toLowerCase().includes(lowerCasePhrase) || secondName.toLowerCase().includes(lowerCasePhrase));\n    const usersFiltered = {};\n    filteredList.forEach(({ firstName, key, secondName, url }) => usersFiltered[key] = { firstName, key, secondName, url });\n    const sortColumn: SortColumn = {\n      sortedByColumn: 'reset',\n      sortingOrder: 'reset'\n    };\n    dispatch(filterSuccess(usersFiltered, sortColumn));\n  } catch (error) {\n    dispatch(filterError(error));\n  };\n};\n\n// --------------------------------------------------\n\n// --------- Sortowanie listy użytkowników ---------\n\nexport const sortPending = () => ({\n  type: `${SORT}_${PENDING}`\n});\n\nexport const sortSuccess = (\nusersSorted: FirebaseReducer['users'], \nsortingOrder: SortingOrder, \nsortColumn: SortColumn) =>  \n({\n  sortColumn,\n  sortingOrder,\n  type: `${SORT}_${FULFILLED}`,\n  usersSorted\n});\n\nexport const sortError = (error: Error) => ({\n  error: error.message,\n  type: `${SORT}_${REJECTED}`,\n});\n\nconst sortBy = (\na: string, \nb: string, \nsortingOrder: SortingOrder\n) => \n  sortingOrder === 'asc'\n  ? \n    a > b\n    ? \n      1 : -1\n  : \n    a > b\n    ?\n      -1 : 1\n\nexport const sortUsersList = (\nusersFiltered: FirebaseReducer['users'], \nsortingOrder: SortingOrder, \nsortedByColumn: SortByColumn): Thunk => \nasync (dispatch) => {\n  dispatch(sortPending());\n  try {\n    const usersSorted = {};\n    Object.values(usersFiltered).sort((a,b) => sortBy(a[sortedByColumn], b[sortedByColumn], sortingOrder))\n    .map(({ firstName, key, secondName, url }) => usersSorted[key] = { firstName, key, secondName, url });\n    const sortColumn = {\n      sortedByColumn,\n      sortingOrder\n    };\n    sortingOrder = (sortingOrder === 'asc')? 'desc' : 'asc';\n    dispatch(sortSuccess(usersSorted, sortingOrder, sortColumn));\n  } catch (error) {\n    dispatch(sortError(error));\n  };\n};\n\n// -------------------------------------------------\n\n// -- Edycja użytkownika - przekazanie jego danych --\n\nexport const editSuccess = (user: UserDetails['user']) => ({\n  type: `${EDIT}_${FULFILLED}`,\n  user\n})\nexport const editError = (error: Error) => ({\n  error: error.message,\n  type: `${EDIT}_${REJECTED}`,\n});\nexport const editUser = ( userData: UserDetails['user']): Thunk => (dispatch) => {\n  try {\n    const { fileName, firstName, key, secondName, url } = userData;\n    const user = {\n      fileName,\n      firstName,\n      key,\n      secondName,\n      url,\n    };\n    dispatch(editSuccess(user));\n  } catch (error) {\n    dispatch(editError(error));\n  }\n}\n\n// --------------------------------------------------\n\n// --------- Aktualizacja danych użytkownika ---------\n\nexport const updateSuccess = (users: FirebaseReducer['users']) =>({\n  listElementIsEdited: '',\n  type: `${UPDATE}_${FULFILLED}`,\n  users\n});\n\nexport const updateError = (error: Error) => ({\n  error: error.message,\n  type: `${UPDATE}_${REJECTED}`\n});\n\nexport const updateUserInFirebase = (user: AddUserToFirebase): Thunk =>\n  async (dispatch, getState, { base, storage }) => {\n    const usersRef = base.ref('users');\n    const pictureRef = storage.ref('personalPicture');\n    try {\n      user.uploadFile\n      ?\n      await pictureRef.child(user.key).delete().then(() => addUser(user, usersRef, pictureRef))\n      :\n      await addUser(user, usersRef, pictureRef);\n      \n      usersRef.on('value', (data) => {\n        if (data) {\n          dispatch(updateSuccess(data.val()));\n        }\n      });\n      dispatch(reset('List'));\n      dispatch(redirect(`/${MAIN_URL}`));\n    } catch (error) {\n      dispatch(updateError(error));\n    };\n  };\n\n// ---------------------------------------------------\n\n// -------------------- Routing --------------------\n\nexport const redirectSuccess = (fileName: ResetFileName) => ({\n    fileName,\n    type: `${GET_FILE_NAME}_${FULFILLED}`\n});\n\nexport const redirectError = (error: Error) => ({\n  error: error.message,\n  type: `${GET_FILE_NAME}_${REJECTED}`\n});\n\nexport const redirect = (url: string): Thunk => (dispatch) => {\n  try { \n    dispatch(redirectSuccess(INITIAL_FILENAME));\n    dispatch(push(url));\n  } catch (error) {\n    dispatch(getError(error))\n  };\n}\n\n// -------------------------------------------------\n\n// --- Podświetlenie wybranego elementu w tabeli ---\n\nexport const detailsSuccess = (listElementIsEdited: string) => ({\n  listElementIsEdited,\n  type: `${DETAILS}_${FULFILLED}`\n});\n\nexport const detailsError = (error: Error) => ({\n  error: error.message,\n  type: `${DETAILS}_${REJECTED}`\n});\n\nexport const highligthChosenElement = (key: string): Thunk => (dispatch) => {\n  try {\n    dispatch(detailsSuccess(key))\n  } catch (error) {\n    dispatch(detailsError(error))\n  }\n}\n\n// -------------------------------------------------\n\n// --- Podświetlenie elementu na czerwono po wejściu na ikonę usunięcia ---\n\nexport const onDeleteHoverSuccess = (listElementToDelete: string) => ({\n  listElementToDelete,\n  type: `${DELETE_HOVER}_${FULFILLED}`\n});\n\nexport const onDeleteHoverError = (error: Error) => ({\n  error: error.message,\n  type: `${DELETE_HOVER}_${REJECTED}`\n});\n\nexport const onDeleteHoverHighlight = (type: string, key: string): Thunk => (dispatch) => {\n  try {\n    type === 'mouseenter' \n    ? \n    dispatch(onDeleteHoverSuccess(key)) \n    : \n    dispatch(onDeleteHoverSuccess(\"\"));\n  } catch (error) {\n    dispatch(onDeleteHoverError(error))\n  }\n}\n\n// ------------------------------------------------------------------------ \n\n// ----- Podświetlenie elementu na niebesko po wejściu na ikonę edycji -----\n\nexport const onEditHoverSuccess = (listElementToEdit: string) => ({\n  listElementToEdit,\n  type: `${EDIT_HOVER}_${FULFILLED}`\n});\n\nexport const onEditHoverError = (error: Error) => ({\n  error: error.message,\n  type: `${EDIT_HOVER}_${REJECTED}`\n});\n\nexport const onEditHoverHighlight = (type: string, key: string): Thunk => (dispatch) => {\n  try {\n    type === 'mouseenter' \n    ? \n    dispatch(onEditHoverSuccess(key)) \n    : \n    dispatch(onEditHoverSuccess(\"\"));\n  } catch (error) {\n    dispatch(onDeleteHoverError(error))\n  }\n}\n\n// -------------------------------------------------------------------------\n\n// ----- Pobranie nazwy pliku do costomowego uploadFile -----\n\nexport const getFileNameSuccess = (fileName: string) => ({\n  fileName,\n  type: `${GET_FILE_NAME}_${FULFILLED}`\n});\n\nexport const getFileNameError = (error: Error) => ({\n  error: error.message,\n  type: `${GET_FILE_NAME}_${REJECTED}`\n});\n\nexport const getFileName = ({target: {value}}: React.ChangeEvent<HTMLInputElement>): Thunk => (dispatch) => {\n  try {\n    const fileName = (value.length > 0)\n    ? \n    value.slice(\"C:/\\fakepath\\/\".length) \n    : \n    INITIAL_FILENAME;\n    dispatch(getFileNameSuccess(fileName));\n  } catch (error) {\n    dispatch(onDeleteHoverError(error))\n  }\n}\n\n// -------------------------------------------------------------------------\n\nconst firebaseReducer = typeToReducer({\n  [CREATE]: {\n    FULFILLED: (state: FirebaseReducer, { users }: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isUploading: false,\n      users,\n      usersFiltered: users,\n      usersSorted: users\n    }),\n    PENDING: (state: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isUploading: true\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n      isUploading: false\n    }),\n  },\n  [RETRIEVE]: {\n    FULFILLED: (state: FirebaseReducer, { users }: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isLoading: false,\n      users,\n      usersFiltered: users,\n      usersSorted: users\n    }),\n    PENDING: (state: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isLoading: true\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n      isLoading: false\n    }),\n  },\n  [EDIT]: {\n    FULFILLED: (state: FirebaseReducer, { user }: FirebaseReducer) => ({\n      ...state,\n      fileName: user.fileName,\n      isError: false,\n      user\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n    })\n  },\n  [DELETE]: {\n    FULFILLED: (state: FirebaseReducer, { users }: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      users,\n      usersFiltered: users,\n      usersSorted: users\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n    }),\n  },\n  [UPDATE]: {\n    FULFILLED: (state: FirebaseReducer, { listElementIsEdited, users }: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isUploading: false,\n      listElementIsEdited,\n      users,\n      usersFiltered: users,\n      usersSorted: users\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n      isUploading: false\n    }),\n  },\n  [DETAILS]: {\n    FULFILLED: (state: FirebaseReducer, { listElementIsEdited }: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isUploading: false,\n      listElementIsEdited,\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n      isUploading: false\n    }),\n  },\n  [DELETE_HOVER]: {\n    FULFILLED: (state: FirebaseReducer, { listElementToDelete }: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      listElementToDelete\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n    }),\n  },\n  [EDIT_HOVER]: {\n    FULFILLED: (state: FirebaseReducer, { listElementToEdit }: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      listElementToEdit\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n    }),\n  },\n  [FILTER]: {\n    FULFILLED: (state: FirebaseReducer, { sortColumn, usersFiltered }: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isLoading: false,\n      sortColumn,\n      usersFiltered,\n      usersSorted: usersFiltered\n    }),\n    PENDING: (state: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isLoading: true\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n      isLoading: false\n    }),\n  },\n  [SORT]: {\n    FULFILLED: (state: FirebaseReducer, { sortColumn, sortingOrder, usersSorted }: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isLoading: false,\n      sortColumn,\n      sortingOrder,\n      usersSorted\n    }),\n    PENDING: (state: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isLoading: true\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n      isLoading: false\n    }),\n  },\n  [GET_FILE_NAME]: {\n    FULFILLED: (state: FirebaseReducer, { fileName }: FirebaseReducer) => ({\n      ...state,\n      fileName,\n      isError: false,\n      isLoading: false,\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n      isLoading: false\n    }),\n  }, \n}, baseInitialState);\n\nexport default (history: History) => combineReducers({\n  firebase: firebaseReducer,\n  form: formReducer,\n  router: connectRouter(history)\n});\n","import { MDBBtn } from \"mdbreact\";\nimport { Col, Container, Row } from 'mdbreact';\nimport * as React from 'react';\nimport { Action, ActionCreator } from 'redux';\nimport { UserDetails } from '../../../../interfaces';\n\ninterface Props {\n  user: UserDetails['user'],\n  redirect: ActionCreator<Action>,\n  deleteUserFromFirebase: ActionCreator<Action>, \n  highligthChosenElement: ActionCreator<Action>\n};\n\nclass About extends React.Component<Props>{\n  public onHighlightBack = () => {\n    this.props.highligthChosenElement();\n    this.props.redirect('/UsersManaging');\n  }\n  public deleteUser = (userKey: string) => () => {\n    this.props.deleteUserFromFirebase(userKey)\n  }\n  public render(){\n    const { user: { firstName, secondName, key, url } } = this.props\n    return(\n      <Container>\n        <Row className=\"justify-content-center\">\n          <MDBBtn color=\"dark\" size=\"sm\" type=\"submit\" onClick={this.onHighlightBack}>Powrót</MDBBtn>\n          <MDBBtn color=\"danger\" size=\"sm\" type=\"submit\" onClick={this.deleteUser(key)}>Usuń</MDBBtn>\n        </Row>\n        {(firstName && secondName && url) &&\n          <Row className=\"py-4 justify-content-center\">\n            <Col xs=\"6\" sm=\"4\" md=\"6\">\n              <img\n                src={url}\n                alt=\"Zdjęcie profilowe\"\n                className=\"rounded-circle img-fluid\"\n              />\n            </Col>\n            <Col xs=\"12\">\n              <h4 className=\"font-weight-bold my-3 text-center\">{firstName} {secondName}</h4>\n            </Col>\n          </Row>}\n      </Container>\n    );\n  }; \n}\n\nexport default About;\n","import { connect } from 'react-redux';\nimport { deleteUserFromFirebase, highligthChosenElement, redirect, State } from '../../../../module';\nimport About from './About';\n\nconst mapStateToProps = ({ firebase: { user } }: State) => ({\n    user\n});\n\nconst mapDispatchToProps = {\n    deleteUserFromFirebase,\n    highligthChosenElement,\n    redirect\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(About);\n","import * as React from 'react';\nimport { WrappedFieldProps } from 'redux-form';\n\nenum PLACEHOLDER {\n  firstName = 'Imię',\n  secondName = 'Nazwisko',\n}\n\nconst InputText: React.FunctionComponent<WrappedFieldProps> = ({ input, meta: { error, submitFailed } }) => \n  <div>\n    <input type=\"text\" {...input} className=\"form-control mb-0\" placeholder={PLACEHOLDER[input.name]} autoComplete=\"off\" />\n    {(submitFailed) && ((error && <span className=\"p-1 bg-danger rounded text-white errorText\">{error}</span>))}\n  </div>\n\nexport default InputText;\n","import { connect } from 'react-redux';\nimport { State } from '../../module';\nimport InputText from './InputText'\n\nconst mapStateToProps = ({ firebase: { user } }: State) => ({\n    user\n});\n\nexport default connect(mapStateToProps, null)(InputText) as any;\n","import * as React from 'react';\nimport { Action, ActionCreator } from 'redux';\nimport { WrappedFieldProps } from 'redux-form';\n\ninterface Props {\n  fileName: string,\n  getFileName: ActionCreator<Action>,\n}\n\nconst UploadFile: React.FunctionComponent<Props & WrappedFieldProps> = ({ fileName, getFileName, input: { value, ...input }, meta: { error, submitFailed } }) => {\n  \n  return(\n    <div>\n      <div className=\"fileUpload btn btn-primary px-3 py-2\">\n          <span>{fileName}</span>\n          <input type=\"file\" className=\"my-0 p-5 upload\" {...input} id=\"uploadFile\" onChange={getFileName} accept=\"image/*\" />\n      </div>\n      <div>\n        {submitFailed && error && <span className=\"p-1 bg-danger rounded text-white errorText\">{error}</span>}\n      </div>\n    </div>\n  );\n}\n\nexport default UploadFile;\n","import { connect } from 'react-redux';\nimport { getFileName, State } from '../../module';\nimport UploadFile from './UploadFile';\n\nconst mapStateToProps = ({ firebase: { fileName } }: State) => ({\n    fileName, \n});\n\nconst mapDispatchToProps = {\n    getFileName\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadFile) as any;\n","import { FormErrors } from 'redux-form';\n\ninterface FormData{\n  fileName?: string,\n  firstName?: string,\n  secondName?: string,\n  uploadFile?: FileList\n}\n\n\nexport const validate  = ({ fileName, firstName, secondName, uploadFile }: FormData): FormErrors<FormData> => {\n  const errors: FormErrors<FormData> = {};\n  \n  errors.firstName = firstName\n  ?\n    firstName.length > 2\n    ?\n    ''\n    :\n    'Imię musi składać się z co najmniej 3 liter'\n  :\n  'Podaj imię!'\n  \n  errors.secondName = secondName\n  ?\n  secondName.length > 2\n    ?\n    ''\n    :\n    'Nazwisko musi składać się z co najmniej 3 liter'\n  :\n  'Podaj nazwisko!'\n\n  errors.uploadFile = (uploadFile && uploadFile.length > 0)\n  ? \n    uploadFile[0].type.match(/image\\/*/)\n    ?\n    ''\n    :\n    'Wybierz plik graficzny' \n  :\n  (fileName !== 'Wybierz plik' && fileName !== undefined)\n  ?\n  ''\n  : \n  'Wybierz plik!';\n  \n  return errors;\n}\n","import { MDBBtn } from \"mdbreact\";\nimport * as React from 'react';\nimport { Action, ActionCreator } from 'redux';\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\nimport InputText from '../../../../shared/InputText';\nimport UploadFile from '../../../../shared/UploadFile';\nimport { validate } from '../../../../validate';\n\ninterface Props {\n  addUserToFirebase: ActionCreator<Action>,\n}\n\nconst AddUserForm: React.FunctionComponent<Props & InjectedFormProps> = ({\n  handleSubmit,\n  addUserToFirebase,\n  submitting,\n}) =>\n  <div>\n    <p className=\"h4 text-center py-4\">Wpisz dane użytkownika</p>\n    <form onSubmit={handleSubmit(addUserToFirebase)} className=\"md-form\">\n      <div>\n      <Field name=\"firstName\" component={InputText} />\n      </div>\n      <div>\n      <Field name=\"secondName\" component={InputText} />\n      </div>\n      <div>\n        <Field name=\"uploadFile\" component={UploadFile} />\n      </div>\n      <div className=\"mt-3\">\n        <MDBBtn color=\"success\" size=\"sm\" type=\"submit\" disabled={submitting}>Zapisz</MDBBtn>\n      </div>\n      \n    </form>\n  </div>\n  \nexport default reduxForm({\n  form: 'List',\n  validate\n})(AddUserForm);\n","import { connect } from 'react-redux';\nimport { addUserToFirebase } from '../../../../module';\nimport AddUserForm from './AddUserForm';\n\nconst mapDispatchToProps = {\n    addUserToFirebase\n};\n\nexport default connect(null, mapDispatchToProps)(AddUserForm);\n","import { MDBBtn } from \"mdbreact\";\nimport * as React from 'react';\nimport { Action, ActionCreator } from 'redux';\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\nimport InputText from '../../../../shared/InputText';\nimport UploadFile from '../../../../shared/UploadFile';\nimport {validate} from '../../../../validate';\n\ninterface Props {\n  fileName: string,\n  redirect: ActionCreator<Action>,\n  updateUserInFirebase: ActionCreator<Action>,\n  editUser: ActionCreator<Action>,\n  highligthChosenElement: ActionCreator<Action>,\n};\n\nclass EditUser extends React.Component<Props & InjectedFormProps>{\n  public onHighlightBack = () =>  {\n    this.props.redirect('/UsersManaging');\n    this.props.highligthChosenElement();\n  };\n  public render(){\n    const { handleSubmit, submitting, updateUserInFirebase } = this.props;\n    return(\n      <div>\n      <p className=\"h4 text-center py-4\">Zmień dane użytkownika</p>\n      <form onSubmit={handleSubmit(updateUserInFirebase)} className=\"md-form\">\n        <div>\n          <Field name=\"firstName\" component={InputText} />\n        </div>\n        <div>\n          <Field name=\"secondName\" component={InputText} />\n        </div>\n        <div>\n          <Field name=\"uploadFile\" component={UploadFile} />\n        </div>\n        <div>\n          <Field name=\"fileName\" component=\"input\" type=\"text\" hidden={true}  />\n        </div>\n        <div className=\"mt-3\">\n          <MDBBtn color=\"dark\" size=\"sm\" type=\"submit\" onClick={this.onHighlightBack}>Powrót</MDBBtn>\n          <MDBBtn color=\"success\" size=\"sm\" type=\"submit\" disabled={submitting}>Zapisz</MDBBtn>\n        </div>\n      </form>\n    </div>\n    );\n  };\n};\n\nexport default reduxForm({\n  enableReinitialize: true,\n  form: 'Edit',\n  validate\n})(EditUser);\n","import { connect } from 'react-redux';\nimport { editUser, highligthChosenElement, redirect, State, updateUserInFirebase } from '../../../../module';\nimport EditUser from './EditUser';\n\nconst mapStateToProps = ({ firebase: { fileName, listElementIsEdited, user: { firstName, key, secondName, url } } }: State) => ({\n    fileName,\n    initialValues: {\n        fileName,\n        firstName,\n        key,\n        secondName,\n        url\n    },\n    listElementIsEdited\n});\n\nconst mapDispatchToProps = {\n    editUser,\n    highligthChosenElement,\n    redirect,\n    updateUserInFirebase\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditUser);\n","import * as classNames from 'classnames'\nimport { Card, CardBody, Col, Fa, Row, Table, TableBody, TableHead } from 'mdbreact';\nimport * as React from 'react';\nimport { Action, ActionCreator } from 'redux';\nimport { SortByColumn, SortColumn, SortingOrder, UsersList } from '../../../../interfaces';\n\ninterface Props {\n  listElementIsEdited: string,\n  sortColumn: SortColumn,\n  sortingOrder: SortingOrder,\n  listElementToDelete: string,\n  listElementToEdit: string,\n  usersFiltered: UsersList['users'],\n  usersSorted: UsersList['users'],\n  redirect: ActionCreator<Action>,\n  deleteUserFromFirebase: ActionCreator<Action>,\n  highligthChosenElement: ActionCreator<Action>,\n  onDeleteHoverHighlight: ActionCreator<Action>,\n  onEditHoverHighlight: ActionCreator<Action>,\n  sortUsersList: ActionCreator<Action>\n};\n\nclass ShowUsersList extends React.Component<Props> {\n\n  public onDelete = (key: string) => (e: Event) => {\n    e.stopPropagation();\n    this.props.deleteUserFromFirebase(`${key}`)\n  }\n\n  public onEdit = (key: string) => (e: Event) => {\n    e.stopPropagation();\n    this.props.highligthChosenElement(key);\n    this.props.redirect(`/UsersManaging/${key}/edit`);\n  }\n\n  public onDetails = (key: string) => () => {\n    this.props.highligthChosenElement(key);\n    this.props.redirect(`/UsersManaging/${key}`);\n  }\n\n  public highlightElementToDelete = (key: string) => ({ type }: Event) => {\n    this.props.onDeleteHoverHighlight(type, key);\n  }\n\n  public highlightElementToEdit = (key: string) => ({ type }: Event) => {\n    this.props.onEditHoverHighlight(type, key);\n  }\n\n  public isActive = (key: string) => classNames({\n    \"bg-danger\": this.props.listElementToDelete === key,\n    \"bg-primary\": this.props.listElementToEdit === key,\n    \"disabled\": this.props.listElementIsEdited === key,\n    \"isActive\": this.props.listElementIsEdited === key,\n  });\n\n  public isSorted = (id: SortByColumn) => classNames({\n    [`fa fa-sort-${this.props.sortColumn? this.props.sortColumn.sortingOrder : ''}`]: this.props.sortColumn? this.props.sortColumn.sortedByColumn === id : '',\n    \"ml-1\": true,\n  });\n\n  public sortList = (usersFiltered: UsersList['users'], sortingOrder: SortingOrder, columnName: SortByColumn) => () => {\n    this.props.sortUsersList(usersFiltered, sortingOrder, columnName)\n  }\n\n  public render() {\n    const { sortingOrder, usersFiltered, usersSorted } = this.props;\n    return (\n      <Card>\n        <CardBody>\n          <h2 className=\"text-center mb-3\">LISTA UŻYTKOWNIKÓW</h2>\n          <Table>\n            <TableHead>\n              <tr>\n                <td\n                  onClick={this.sortList(usersFiltered, sortingOrder, 'firstName')}\n                  title=\"Sortuj\"\n                  className=\"font-weight-bold sortList\">\n                  Imię\n                  <i className={this.isSorted('firstName')} />\n                </td>\n                <td\n                  onClick={this.sortList(usersFiltered, sortingOrder, 'secondName')}\n                  title=\"Sortuj\" \n                  className=\"font-weight-bold sortList\">\n                  Nazwisko\n                  <i className={this.isSorted('secondName')} />\n                </td>\n                <td className=\"font-weight-bold text-center\">Zdjęcie</td>\n                <td className=\"font-weight-bold text-center\">Usuń/Edytuj</td>\n              </tr>\n            </TableHead>\n            <TableBody>\n              {Object.values(usersSorted).map(({ firstName, secondName, url, key }) =>\n                <tr\n                  key={key}\n                  onClick={this.onDetails(key)}\n                  className={this.isActive(key)}\n                  title=\"Wyświetl szczegóły o użytkowniku\"\n                >\n                  <td className=\"w-25\">{firstName}</td>\n                  <td className=\"w-25\">{secondName}</td>\n                  <td>\n                    <Row className=\"justify-content-center\">\n                      <Col sm=\"4\">\n                        <img\n                          src={url}\n                          alt=\"Zdjęcie profilowe\"\n                          className=\"img-fluid rounded-circle\"\n                        />\n                      </Col>\n                    </Row>\n                  </td>\n                  <td>\n                    <Row className=\"justify-content-center\">\n                      <Fa\n                        icon=\"trash\"\n                        id=\"delete\"\n                        size=\"lg\"\n                        title=\"Usuń\"\n                        type=\"submit\"\n                        onClick={this.onDelete(key)}\n                        onMouseEnter={this.highlightElementToDelete(key)}\n                        onMouseLeave={this.highlightElementToDelete(key)}\n                        className=\"mx-2 onDelete\"\n                      />\n                      <Fa\n                        icon=\"edit\"\n                        id=\"edit\"\n                        size=\"lg\"\n                        title=\"Edytuj\"\n                        type=\"submit\"\n                        onClick={this.onEdit(key)}\n                        onMouseEnter={this.highlightElementToEdit(key)}\n                        onMouseLeave={this.highlightElementToEdit(key)}\n                        className=\"mx-2\"\n                      />\n                    </Row>\n                  </td>\n                </tr>\n              )}\n            </TableBody>\n          </Table>\n        </CardBody>\n      </Card>\n    );\n  };\n}\n\nexport default ShowUsersList;\n","import { connect } from 'react-redux';\nimport { deleteUserFromFirebase, highligthChosenElement, onDeleteHoverHighlight, onEditHoverHighlight, redirect, sortUsersList, State } from '../../../../module';\nimport ShowUsersList from './ShowUsersList';\n\nconst mapStateToProps = ({ firebase: {  listElementIsEdited, sortingOrder, sortColumn, listElementToDelete, listElementToEdit, usersFiltered, usersSorted } }: State) => ({\n    listElementIsEdited,\n    listElementToDelete,\n    listElementToEdit,\n    sortColumn,\n    sortingOrder,\n    usersFiltered,\n    usersSorted\n});\n\nconst mapDispatchToProps = {\n    deleteUserFromFirebase,\n    highligthChosenElement,\n    onDeleteHoverHighlight,\n    onEditHoverHighlight,\n    redirect,\n    sortUsersList\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowUsersList);\n","import { Card, CardBody, Col, Container, Row } from 'mdbreact';\nimport * as React from 'react';\nimport Loader from 'react-loaders';\nimport { match as Match } from 'react-router';\nimport { Action, ActionCreator } from 'redux';\nimport { UserDetails, UsersList } from '../../interfaces';\nimport './AddUserToFirebase.css';\nimport './AddUserToFirebase.scss';\nimport About from './components/About';\nimport AddUserForm from './components/AddUserForm';\nimport EditUser from './components/EditUser';\nimport ShowUsersList from './components/ShowUsersList';\n\ninterface Props {\n  user: UserDetails['user'],\n  users: UsersList['users'],\n  usersFiltered: UsersList['users'],\n  match: Match<{ key: string, action: string }>,\n  isError: boolean,\n  isLoading: boolean,\n  editUser: ActionCreator<Action>,\n  filterUsersList: ActionCreator<Action>,\n  getUserFromFirebase: ActionCreator<Action>\n}\n\nclass AddUserToFirebase extends React.Component<Props> {\n  public componentDidMount() {\n    this.props.getUserFromFirebase();\n  }\n  public componentDidUpdate() {\n    const { editUser, match, users } = this.props;\n    if (match.params.key && users) {\n      editUser(users[match.params.key]);\n    }\n  }\n  public filterList =(users: UsersList['users']) => ({ target: { value } }: React.ChangeEvent<HTMLInputElement> ) => {\n    this.props.filterUsersList(users, value);\n  }\n  public render() {\n    const { users, usersFiltered, isLoading, isError, match } = this.props;\n    return (\n      <Container>\n        <Row className=\"mt-4\">\n          <Col lg=\"8\">\n            <form className=\"md-form\">\n              <input\n                name=\"filerList\"\n                type=\"text\"\n                className=\"form-control mb-2\"\n                placeholder=\"Wpisz poszukiwanego użytkownika\"\n                onChange={this.filterList(users)}\n              />\n            </form>\n            {isLoading\n              ? <Row className=\"justify-content-center mt-5\"><Loader type=\"ball-clip-rotate-multiple\" active={true} /></Row>\n              : isError\n                ? <p>Wystąpił błąd podczas pobierania danych!!!</p>\n                : usersFiltered !== null\n                  ? Object.values(usersFiltered).length > 0\n                    ? <ShowUsersList />\n                    : <h2>Brak listy do wyświetlenia</h2>\n                  : <h2>Brak listy do wyświetlenia</h2>\n            }\n          </Col>\n          <Col lg=\"4\" className=\"mt-3 mt-lg-0\">\n            <Card>\n              <CardBody>\n                {match.params.key\n                  ? match.params.action && match.params.action === 'edit'\n                    ? <EditUser />\n                    : <About />\n                  : <AddUserForm />\n                }\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default AddUserToFirebase;\n","import { connect } from 'react-redux';\nimport { editUser,filterUsersList, getUserFromFirebase, State } from '../../module';\nimport AddUserToFirebase from './AddUserToFirebase';\n\nconst mapStateToProps = ({ firebase: { isError, isLoading, users, usersFiltered, usersSorted } }: State) => ({\n    isError,\n    isLoading,\n    users,\n    usersFiltered,\n    usersSorted\n});\n\nconst mapDispatchToProps = {\n    editUser,\n    filterUsersList,\n    getUserFromFirebase,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUserToFirebase);\n","import 'bootstrap-css-only/css/bootstrap.min.css';\nimport { ConnectedRouter, routerMiddleware } from 'connected-react-router';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { createBrowserHistory } from 'history';\nimport 'mdbreact/dist/css/mdb.css';\nimport * as React from \"react\";\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { base, storage } from './database';\nimport './index.css';\nimport createRootReducer, { MAIN_URL } from './module';\nimport AddUserToFirebase from \"./routes/AddUserToFirebase\";\n\n\n\nconst history = createBrowserHistory();\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  createRootReducer(history),\n  composeEnhancers(\n    applyMiddleware(\n      thunk.withExtraArgument({ base, storage }),\n      routerMiddleware(history)\n    ),\n  )\n);\n\nconst List = () => (\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <Switch>\n          <Route path={`/${MAIN_URL}/:key?/:action?`} component={AddUserToFirebase} />\n        </Switch>\n      </div>\n    </ConnectedRouter>\n  </Provider>\n)\n\nrender(<List />, document.querySelector(\"#container\"));\n"],"sourceRoot":""}