{"version":3,"sources":["database.tsx","module.tsx","routes/AddUserToFirebase/components/About/About.tsx","routes/AddUserToFirebase/components/About/index.tsx","shared/InputText/InputText.tsx","shared/InputText/index.tsx","shared/UploadFile/UploadFile.tsx","shared/UploadFile/index.tsx","validate.tsx","routes/AddUserToFirebase/components/AddUserForm/AddUserForm.tsx","routes/AddUserToFirebase/components/AddUserForm/index.tsx","routes/AddUserToFirebase/components/EditUser/EditUser.tsx","routes/AddUserToFirebase/components/EditUser/index.tsx","routes/AddUserToFirebase/components/ShowUsersList/ShowUsersList.tsx","routes/AddUserToFirebase/components/ShowUsersList/index.tsx","routes/AddUserToFirebase/AddUserToFirebase.tsx","routes/AddUserToFirebase/index.tsx","index.tsx"],"names":["index_cjs","apiKey","authDomain","databaseURL","messagingSenderId","projectId","storageBucket","database_base","database_storage","addUser","firstName","key","secondName","uploadFile","usersRef","pictureRef","undefined","Date","now","toString","child","put","then","snapshot","metadata","name","getDownloadURL","url","set","deleteUserFromFirebase","dispatch","getState","base","storage","ref","Object","lib","remove","delete","on","data","users","type","deleteSuccess","val","error","message","deleteError","getError","editUser","userData","user","editSuccess","editError","redirect","fileName","redirectSuccess","highligthChosenElement","listElementIsEdited","detailsSuccess","detailsError","onDeleteHoverSuccess","listElementToDelete","onDeleteHoverError","onEditHoverSuccess","listElementToEdit","firebaseReducer","type_to_reducer_lib_default","CREATE","FULFILLED","state","assign","isError","isUploading","usersFiltered","usersSorted","PENDING","REJECTED","RETRIEVE","isLoading","EDIT","DELETE","UPDATE","DETAILS","DELETE_HOVER","EDIT_HOVER","FILTER","sortColumn","SORT","sortingOrder","GET_FILE_NAME","components_About_About","react","[object Object]","this","onHighlightBack","props","deleteUser","userKey","mdbreact","className","color","size","onClick","src","alt","mapDispatchToProps","PLACEHOLDER","components_About","react_redux_es","firebase","InputText_InputText","input","meta","submitFailed","placeholder","autoComplete","shared_InputText","UploadFile_UploadFile","_a","getFileName","_b","value","tslib_es6","id","onChange","accept","UploadFile_mapDispatchToProps","target","getFileNameSuccess","length","slice","shared_UploadFile","validate","errors","match","AddUserForm_AddUserForm","reduxForm","form","handleSubmit","addUserToFirebase","pristine","submitting","onSubmit","Field","component","disabled","AddUserForm_mapDispatchToProps","async","addSuccess","redux_form_es","addError","components_AddUserForm","components_EditUser_EditUser","enableReinitialize","updateUserInFirebase","EditUser_mapDispatchToProps","updateSuccess","updateError","components_EditUser","initialValues","components_ShowUsersList_ShowUsersList","onDelete","e","stopPropagation","onEdit","onDetails","highlightElementToDelete","onDeleteHoverHighlight","highlightElementToEdit","onEditHoverHighlight","isActive","classnames","bg-danger","bg-primary","isSorted","sortedByColumn","ml-1","sortList","columnName","sortUsersList","title","values","map","sm","icon","onMouseEnter","onMouseLeave","ShowUsersList_mapDispatchToProps","sort","a","b","sortBy","sortSuccess","sortError","components_ShowUsersList","src_routes_AddUserToFirebase_AddUserToFirebase","filterList","filterUsersList","getUserFromFirebase","params","lg","react_loaders_default","active","action","AddUserToFirebase_mapDispatchToProps","phrase","filteredList","filter","toLowerCase","includes","forEach","filterSuccess","filterError","getSuccess","once","routes_AddUserToFirebase","src_history","es","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","redux","store","history","reducer","router","src_module","redux_thunk_es","withExtraArgument","react_dom","Switch","Route","path","document","querySelector"],"mappings":"oTAUAA,EAAA,cARe,CACbC,OAAQ,0CACRC,WAAY,wCACZC,YAAa,+CACbC,kBAAmB,eACnBC,UAAW,wBACXC,cAAe,sCAGV,MAAMC,EAAOP,EAAA,WACPQ,EAAUR,EAAA,6CCFvB,MA0EMS,EAAU,EACZC,YAAWC,MAAKC,aAAYC,cAC9BC,EACAC,UAEYC,IAARL,IACFA,EAAMM,KAAKC,MAAMC,YAEnBJ,EAAWK,MAAMT,GAAKU,IAAIR,EAAW,IAAIS,KAAMC,IAC7CR,EAAWK,MAAMG,EAASC,SAASC,MAAMC,iBAAiBJ,KAAMK,IAC9Db,EAASM,MAAMT,GAAKiB,IAAI,CACtBlB,YACAC,MACAC,aACAe,aA0DKE,EAA0BlB,GACrC,CAACmB,EAAUC,GAAYC,OAAMC,cAC3B,MAAMnB,EAAWkB,EAAKE,IAAI,SACpBnB,EAAakB,EAAQC,IAAI,mBAC/B,IACEJ,EAASK,OAAAC,EAAA,KAAAD,CAAK,MACdrB,EAASM,SAAST,KAAO0B,SAASf,KAChC,IAAMP,EAAWK,SAAST,KAAO2B,SAAShB,KACxC,IAAMR,EAASyB,GAAG,QAAUC,IACtBA,GACFV,EApBe,CAACW,IAAoC,CAChEC,KAAM,mBACND,UAkBqBE,CAAcH,EAAKI,YAKpC,MAAOC,GACPf,EArBqB,CAACe,IAAiB,CAC3CA,MAAOA,EAAMC,QACbJ,KAAM,oBAmBOK,CAAYF,MAiBdG,EAAYH,IAAiB,CACxCA,MAAOA,EAAMC,QACbJ,KAAM,sBA4GKO,EAAaC,GAA0CpB,IAClE,IACE,MAAMpB,UAAEA,EAASC,IAAEA,EAAGC,WAAEA,EAAUe,IAAEA,GAAQuB,EAO5CpB,EAjBuB,CAACqB,IAA8B,CACxDT,KAAM,iBACNS,SAeWC,CANI,CACX1C,YACAC,MACAC,aACAe,SAGF,MAAOkB,GACPf,EAfqB,CAACe,IAAiB,CACzCA,MAAOA,EAAMC,QACbJ,KAAM,kBAaKW,CAAUR,MAqDVS,EAAY3B,GAAwBG,IAC/C,IACEA,EAZ2B,CAACyB,IAA4B,CACxDA,WACAb,KAAM,4BAUGc,CAnWY,iBAoWrB1B,EAASK,OAAAC,EAAA,KAAAD,CAAKR,IACd,MAAOkB,GACPf,EAASkB,EAASH,MAkBTY,EAA0B9C,GAAwBmB,IAC7D,IACEA,EAZ0B,CAAC4B,IAAgC,CAC7DA,sBACAhB,KAAM,sBAUKiB,CAAehD,IACxB,MAAOkC,GACPf,EATwB,CAACe,IAAiB,CAC5CA,MAAOA,EAAMC,QACbJ,KAAM,qBAOKkB,CAAaf,MAQbgB,EAAwBC,IAAgC,CACnEA,sBACApB,KAAM,2BAGKqB,EAAsBlB,IAAiB,CAClDA,MAAOA,EAAMC,QACbJ,KAAM,0BAeKsB,EAAsBC,IAA8B,CAC/DA,oBACAvB,KAAM,yBAyCFwB,QAAkBC,GAAc,CACpCC,OAAU,CACRC,UAAW,CAACC,GAA0Bf,WAAUd,WAA6BN,OAAAoC,OAAA,GACxED,EAAK,CACRf,WACAiB,SAAS,EACTC,aAAa,EACbhC,QACAiC,cAAejC,EACfkC,YAAalC,IAEfmC,QAAUN,GAA2BnC,OAAAoC,OAAA,GAChCD,EAAK,CACRE,SAAS,EACTC,aAAa,IAEfI,SAAU,CAACP,GAA0BzB,WAA+BV,OAAAoC,OAAA,GAC/DD,EAAK,CACRzB,QACA2B,SAAS,EACTC,aAAa,KAGjBK,SAAY,CACVT,UAAW,CAACC,GAA0B7B,WAA6BN,OAAAoC,OAAA,GAC9DD,EAAK,CACRE,SAAS,EACTO,WAAW,EACXtC,QACAiC,cAAejC,EACfkC,YAAalC,IAEfmC,QAAUN,GAA2BnC,OAAAoC,OAAA,GAChCD,EAAK,CACRE,SAAS,EACTO,WAAW,IAEbF,SAAU,CAACP,GAA0BzB,WAA+BV,OAAAoC,OAAA,GAC/DD,EAAK,CACRzB,QACA2B,SAAS,EACTO,WAAW,KAGfC,KAAQ,CACNX,UAAW,CAACC,GAA0BnB,UAA4BhB,OAAAoC,OAAA,GAC7DD,EAAK,CACRE,SAAS,EACTrB,SAEF0B,SAAU,CAACP,GAA0BzB,WAA+BV,OAAAoC,OAAA,GAC/DD,EAAK,CACRzB,QACA2B,SAAS,KAGbS,OAAU,CACRZ,UAAW,CAACC,GAA0B7B,WAA6BN,OAAAoC,OAAA,GAC9DD,EAAK,CACRE,SAAS,EACT/B,QACAiC,cAAejC,EACfkC,YAAalC,IAEfoC,SAAU,CAACP,GAA0BzB,WAA+BV,OAAAoC,OAAA,GAC/DD,EAAK,CACRzB,QACA2B,SAAS,KAGbU,OAAU,CACRb,UAAW,CAACC,GAA0Bf,WAAUG,sBAAqBjB,WAA6BN,OAAAoC,OAAA,GAC7FD,EAAK,CACRf,WACAiB,SAAS,EACTC,aAAa,EACbf,sBACAjB,QACAiC,cAAejC,EACfkC,YAAalC,IAEfoC,SAAU,CAACP,GAA0BzB,WAA+BV,OAAAoC,OAAA,GAC/DD,EAAK,CACRzB,QACA2B,SAAS,EACTC,aAAa,KAGjBU,QAAW,CACTd,UAAW,CAACC,GAA0BZ,yBAA2CvB,OAAAoC,OAAA,GAC5ED,EAAK,CACRE,SAAS,EACTC,aAAa,EACbf,wBAEFmB,SAAU,CAACP,GAA0BzB,WAA+BV,OAAAoC,OAAA,GAC/DD,EAAK,CACRzB,QACA2B,SAAS,EACTC,aAAa,KAGjBW,aAAgB,CACdf,UAAW,CAACC,GAA0BR,yBAA2C3B,OAAAoC,OAAA,GAC5ED,EAAK,CACRE,SAAS,EACTV,wBAEFe,SAAU,CAACP,GAA0BzB,WAA+BV,OAAAoC,OAAA,GAC/DD,EAAK,CACRzB,QACA2B,SAAS,KAGba,WAAc,CACZhB,UAAW,CAACC,GAA0BL,uBAAyC9B,OAAAoC,OAAA,GAC1ED,EAAK,CACRE,SAAS,EACTP,sBAEFY,SAAU,CAACP,GAA0BzB,WAA+BV,OAAAoC,OAAA,GAC/DD,EAAK,CACRzB,QACA2B,SAAS,KAGbc,OAAU,CACRjB,UAAW,CAACC,GAA0BiB,aAAYb,mBAAqCvC,OAAAoC,OAAA,GAClFD,EAAK,CACRE,SAAS,EACTO,WAAW,EACXQ,aACAb,gBACAC,YAAaD,IAEfE,QAAUN,GAA2BnC,OAAAoC,OAAA,GAChCD,EAAK,CACRE,SAAS,EACTO,WAAW,IAEbF,SAAU,CAACP,GAA0BzB,WAA+BV,OAAAoC,OAAA,GAC/DD,EAAK,CACRzB,QACA2B,SAAS,EACTO,WAAW,KAGfS,KAAQ,CACNnB,UAAW,CAACC,GAA0BiB,aAAYE,eAAcd,iBAAmCxC,OAAAoC,OAAA,GAC9FD,EAAK,CACRE,SAAS,EACTO,WAAW,EACXQ,aACAE,eACAd,gBAEFC,QAAUN,GAA2BnC,OAAAoC,OAAA,GAChCD,EAAK,CACRE,SAAS,EACTO,WAAW,IAEbF,SAAU,CAACP,GAA0BzB,WAA+BV,OAAAoC,OAAA,GAC/DD,EAAK,CACRzB,QACA2B,SAAS,EACTO,WAAW,KAGfW,cAAiB,CACfrB,UAAW,CAACC,GAA0Bf,cAAgCpB,OAAAoC,OAAA,GACjED,EAAK,CACRf,WACAiB,SAAS,EACTO,WAAW,IAEbF,SAAU,CAACP,GAA0BzB,WAA+BV,OAAAoC,OAAA,GAC/DD,EAAK,CACRzB,QACA2B,SAAS,EACTO,WAAW,MAjkBQ,CACvBxB,SAAU,eACViB,SAAS,EACTO,WAAW,EACXN,aAAa,EACbf,oBAAqB,GACrBI,oBAAqB,GACrBG,kBAAmB,GACnBsB,WAAY,GACZE,aAAc,MACdtC,KAAM,GACNV,MAAO,GACPiC,cAAe,KA0jBF,0CC5lBA,IAAAiB,EA9Bf,cAAoBC,EAAA,UAApBC,kCACSC,KAAAC,gBAAkB,MACvBD,KAAKE,MAAMvC,yBACXqC,KAAKE,MAAM1C,SAAS,OAEfwC,KAAAG,WAAa,CAACC,GAAoB,KACvCJ,KAAKE,MAAMnE,uBAAuBqE,KAE7BL,SACL,MAAQ1C,MAAMzC,UAAEA,EAASE,WAAEA,EAAUD,IAAEA,EAAGgB,IAAEA,IAAUmE,KAAKE,MAC3D,OACEJ,EAAA,cAACO,EAAA,UAAS,KACRP,EAAA,cAACO,EAAA,IAAG,CAACC,UAAU,0BACbR,EAAA,cAACO,EAAA,OAAM,CAACE,MAAM,OAAOC,KAAK,KAAK5D,KAAK,SAAS6D,QAAST,KAAKC,iBAAe,aAC1EH,EAAA,cAACO,EAAA,OAAM,CAACE,MAAM,SAASC,KAAK,KAAK5D,KAAK,SAAS6D,QAAST,KAAKG,WAAWtF,IAAI,cAE5ED,GAAaE,GAAce,GAC3BiE,EAAA,cAACO,EAAA,IAAG,CAACC,UAAU,+BACbR,EAAA,qBACEY,IAAK7E,EACL8E,IAAI,yBACJL,UAAU,6BAEZR,EAAA,oBAAIQ,UAAU,yBAAyB1F,MAAYE,OChC/D,MAIM8F,EAAqB,CACvB7E,yBACA4B,yBACAH,YAGW,ICXVqD,EDWUC,EAAAzE,OAAA0E,EAAA,QAAA1E,CAVS,EAAG2E,UAAY3D,YAAoB,CACvDA,SASoCuD,EAAzB,CAA6Cf,oBCX5D,SAAKgB,GACHA,EAAA,sBACAA,EAAA,sBAFF,CAAKA,MAAW,KAWD,IAAAI,EAN+C,EAAGC,QAAOC,MAAQpE,QAAOqE,mBACrFtB,EAAA,yBACEA,EAAA,sBAAAzD,OAAAoC,OAAA,CAAO7B,KAAK,QAAWsE,EAAK,CAAEZ,UAAU,oBAAoBe,YAAaR,EAAYK,EAAMvF,MAAO2F,aAAa,SAC9G,GAAoBvE,GAAS+C,EAAA,sBAAMQ,UAAU,8CAA8CvD,ICHjF,IAAAwE,EAAAlF,OAAA0E,EAAA,QAAA1E,CAJS,EAAG2E,UAAY3D,YAAoB,CACvDA,SAGoC,KAAzB,CAA+B4D,WCgB/B,IAAAO,EAfyDC,QAAAhE,SAAEA,EAAQiE,YAAEA,GAAWD,EAAEE,EAAAF,EAAAP,OAAAU,MAASA,GAAKD,EAAET,EAAAW,EAAA,EAAAF,EAAA,YAAYR,MAAMpE,MAAEA,EAAKqE,aAAEA,IAAcK,EAExJ,OACE3B,EAAA,yBACEA,EAAA,qBAAKQ,UAAU,wCACXR,EAAA,0BAAOrC,GACPqC,EAAA,sBAAAzD,OAAAoC,OAAA,CAAO7B,KAAK,OAAO0D,UAAU,mBAAsBY,EAAK,CAAEY,GAAG,aAAaC,SAAUL,EAAaM,OAAO,cAE5GlC,EAAA,yBACG,GAAmB/C,GAAS+C,EAAA,sBAAMQ,UAAU,8CAA8CvD,MCdnG,MAIMkF,EAAqB,CACvBP,YN2buB,EAAEQ,QAASN,YAAyD5F,IAC7F,IAEEA,EAb8B,CAACyB,IAAqB,CACtDA,WACAb,KAAM,4BAWKuF,CADSP,EAAMQ,OAAS,EAAIR,EAAMS,MAAM,gBAAiBD,QA5b7C,iBA8brB,MAAOrF,GACPf,EAASiC,EAAmBlB,OM7bjB,IAAAuF,EAAAjG,OAAA0E,EAAA,QAAA1E,CARS,EAAG2E,UAAYvD,gBAAwB,CAC3DA,aAOoCwE,EAAzB,CAA6CT,GCJrD,MAAMe,EAAY,EAAG3H,YAAWE,aAAYC,iBAC/C,MAAMyH,EAA+B,GAgCrC,OA9BAA,EAAO5H,UAAYA,EAEjBA,EAAUwH,OAAS,EAEnB,GAEA,kEAEF,mBAEAI,EAAO1H,WAAaA,EAEpBA,EAAWsH,OAAS,EAElB,GAEA,iEAEF,kBAEAI,EAAOzH,WAAcA,GAAcA,EAAWqH,OAAS,EAErDrH,EAAW,GAAG6B,KAAK6F,MAAM,YAEzB,GAEA,yBAEF,gBAEOD,GCJI,IAAAE,EAAArG,OAAAsG,EAAA,EAAAtG,CAAU,CACvBuG,KAAM,OACNL,YAFa,CAzByD,EACtEM,eACAC,oBACAC,WACAC,gBAEAlD,EAAA,yBACEA,EAAA,mBAAGQ,UAAU,uBAAqB,+BAClCR,EAAA,sBAAMmD,SAAUJ,EAAaC,GAAoBxC,UAAU,WACzDR,EAAA,yBACAA,EAAA,cAACoD,EAAA,EAAK,CAACvH,KAAK,YAAYwH,UAAW5B,KAEnCzB,EAAA,yBACAA,EAAA,cAACoD,EAAA,EAAK,CAACvH,KAAK,aAAawH,UAAW5B,KAEpCzB,EAAA,yBACEA,EAAA,cAACoD,EAAA,EAAK,CAACvH,KAAK,aAAawH,UAAWb,KAEtCxC,EAAA,qBAAKQ,UAAU,QACbR,EAAA,cAACO,EAAA,OAAM,CAACE,MAAM,UAAUC,KAAK,KAAK5D,KAAK,SAASwG,SAAUL,GAAYC,GAAU,cC3BxF,MAAMK,EAAqB,CACvBP,kBTsH8BzF,GAChCiG,MAAOtH,EAAUC,GAAYC,OAAMC,cACjCH,EAjB4B,CAC9BY,KAAM,mBAiBJ,MAAM5B,EAAWkB,EAAKE,IAAI,SACpBnB,EAAakB,EAAQC,IAAI,mBAE/B,UACQzB,EAAQ0C,EAAMrC,EAAUC,GAC9BD,EAASyB,GAAG,QAAUC,IAChBA,GACFV,EArBgB,EAACW,EAAiCc,KAAqB,CAC/EA,WACAb,KAAM,mBACND,UAkBiB4G,CAAW7G,EAAKI,MA3HV,mBA8HnBd,EAASK,OAAAmH,EAAA,EAAAnH,CAAM,SACf,MAAOU,GACPf,EApBkB,CAACe,IAAiB,CACxCA,MAAOA,EAAMC,QACbJ,KAAM,oBAkBO6G,CAAS1G,OSlIT,IAAA2G,EAAArH,OAAA0E,EAAA,QAAA1E,CAAQ,KAAMgH,EAAd,CAAkCX,GCqClC,IAAAiB,EAAAtH,OAAAsG,EAAA,EAAAtG,CAAU,CACvBuH,oBAAoB,EACpBhB,KAAM,OACNL,YAHa,CA9Bf,cAAuBzC,EAAA,UAAvBC,kCACSC,KAAAC,gBAAkB,MACvBD,KAAKE,MAAM1C,SAAS,KACpBwC,KAAKE,MAAMvC,2BAENoC,SACL,MAAM8C,aAAEA,EAAYE,SAAEA,EAAQC,WAAEA,EAAUa,qBAAEA,GAAyB7D,KAAKE,MAC1E,OACEJ,EAAA,yBACAA,EAAA,mBAAGQ,UAAU,uBAAqB,oCAClCR,EAAA,sBAAMmD,SAAUJ,EAAagB,GAAuBvD,UAAU,WAC5DR,EAAA,yBACEA,EAAA,cAACoD,EAAA,EAAK,CAACvH,KAAK,YAAYwH,UAAW5B,KAErCzB,EAAA,yBACEA,EAAA,cAACoD,EAAA,EAAK,CAACvH,KAAK,aAAawH,UAAW5B,KAEtCzB,EAAA,yBACEA,EAAA,cAACoD,EAAA,EAAK,CAACvH,KAAK,aAAawH,UAAWb,KAEtCxC,EAAA,qBAAKQ,UAAU,QACbR,EAAA,cAACO,EAAA,OAAM,CAACE,MAAM,OAAOC,KAAK,KAAK5D,KAAK,SAAS6D,QAAST,KAAKC,iBAAe,aAC1EH,EAAA,cAACO,EAAA,OAAM,CAACE,MAAM,UAAUC,KAAK,KAAK5D,KAAK,SAASwG,SAAUL,GAAYC,GAAU,gBCjC1F,MAUMc,EAAqB,CACvB3G,WACAQ,yBACAH,WACAqG,qBXwTiCxG,GACnCiG,MAAOtH,EAAUC,GAAYC,OAAMC,cACjC,MAAMnB,EAAWkB,EAAKE,IAAI,SACpBnB,EAAakB,EAAQC,IAAI,mBAE/B,UACQnB,EAAWK,MAAM+B,EAAKxC,KAAK2B,SAAShB,KAAK,IAAMb,EAAQ0C,EAAMrC,EAAUC,IAC7ED,EAASyB,GAAG,QAAUC,IAChBA,GACFV,EArBmB,EAACW,EAAiCc,KAAqB,CAClFA,WACAG,oBAAqB,GACrBhB,KAAM,mBACND,UAiBiBoH,CAAcrH,EAAKI,MAzUb,mBA4UnBd,EAASK,OAAAmH,EAAA,EAAAnH,CAAM,SACfL,EAASK,OAAAC,EAAA,KAAAD,CAAK,MACd,MAAOU,GACPf,EApBqB,CAACe,IAAiB,CAC3CA,MAAOA,EAAMC,QACbJ,KAAM,oBAkBOoH,CAAYjH,OWpUZ,IAAAkH,EAAA5H,OAAA0E,EAAA,QAAA1E,CAjBS,EAAG2E,UAAYpD,sBAAqBP,MAAQzC,YAAWC,MAAKC,aAAYe,YAAqB,CACjHqI,cAAe,CACXtJ,YACAC,MACAC,aACAe,OAEJ+B,wBAUoCkG,EAAzB,CAA6CH,WC+H7C,IAAAQ,EA9Hf,cAA4BrE,EAAA,UAA5BC,kCAESC,KAAAoE,SAAW,CAACvJ,GAAiBwJ,IAClCA,EAAEC,kBACFtE,KAAKE,MAAMnE,0BAA0BlB,OAGhCmF,KAAAuE,OAAS,CAAC1J,GAAiBwJ,IAChCA,EAAEC,kBACFtE,KAAKE,MAAMvC,uBAAuB9C,GAClCmF,KAAKE,MAAM1C,aAAa3C,YAGnBmF,KAAAwE,UAAY,CAAC3J,GAAgB,KAClCmF,KAAKE,MAAMvC,uBAAuB9C,GAClCmF,KAAKE,MAAM1C,aAAa3C,OAGnBmF,KAAAyE,yBAA2B,CAAC5J,GAAgB,EAAG+B,WACpDoD,KAAKE,MAAMwE,uBAAuB9H,EAAM/B,KAGnCmF,KAAA2E,uBAAyB,CAAC9J,GAAgB,EAAG+B,WAClDoD,KAAKE,MAAM0E,qBAAqBhI,EAAM/B,KAGjCmF,KAAA6E,SAAW,CAAChK,GAAgBiK,EAAW,CAC5CC,YAAa/E,KAAKE,MAAMlC,sBAAwBnD,EAChDmK,aAAchF,KAAKE,MAAM/B,oBAAsBtD,EAC/CuI,SAAYpD,KAAKE,MAAMtC,sBAAwB/C,EAC/CgK,SAAY7E,KAAKE,MAAMtC,sBAAwB/C,KAG1CmF,KAAAiF,SAAW,CAACnD,GAAqBgD,EAAW,CACjD/E,eAAeC,KAAKE,MAAMT,WAAYO,KAAKE,MAAMT,WAAWE,aAAe,MAAOK,KAAKE,MAAMT,WAAYO,KAAKE,MAAMT,WAAWyF,iBAAmBpD,EAAK,GACvJqD,QAAQ,KAGHnF,KAAAoF,SAAW,EAACxG,EAAmCe,EAA4B0F,IAA6B,KAC7GrF,KAAKE,MAAMoF,cAAc1G,EAAee,EAAc0F,KAGjDtF,SACL,MAAMJ,aAAEA,EAAYf,cAAEA,EAAaC,YAAEA,GAAgBmB,KAAKE,MAC1D,OACEJ,EAAA,cAACO,EAAA,KAAI,KACHP,EAAA,cAACO,EAAA,SAAQ,KACPP,EAAA,oBAAIQ,UAAU,oBAAkB,8BAChCR,EAAA,cAACO,EAAA,MAAK,KACJP,EAAA,cAACO,EAAA,UAAS,KACRP,EAAA,wBACEA,EAAA,oBACEW,QAAST,KAAKoF,SAASxG,EAAee,EAAc,aACpD4F,MAAM,SACNjF,UAAU,yCAEVR,EAAA,mBAAGQ,UAAWN,KAAKiF,SAAS,gBAE9BnF,EAAA,oBACEW,QAAST,KAAKoF,SAASxG,EAAee,EAAc,cACpD4F,MAAM,SACNjF,UAAU,wCAEVR,EAAA,mBAAGQ,UAAWN,KAAKiF,SAAS,iBAE9BnF,EAAA,oBAAIQ,UAAU,gCAA8B,gBAC5CR,EAAA,oBAAIQ,UAAU,gCAA8B,sBAGhDR,EAAA,cAACO,EAAA,UAAS,KACPhE,OAAOmJ,OAAO3G,GAAa4G,IAAI,EAAG7K,YAAWE,aAAYe,MAAKhB,SAC7DiF,EAAA,oBACEjF,IAAKA,EACL4F,QAAST,KAAKwE,UAAU3J,GACxByF,UAAWN,KAAK6E,SAAShK,GACzB0K,MAAM,sDAENzF,EAAA,oBAAIQ,UAAU,QAAQ1F,GACtBkF,EAAA,oBAAIQ,UAAU,QAAQxF,GACtBgF,EAAA,wBACEA,EAAA,cAACO,EAAA,IAAG,CAACC,UAAU,0BACbR,EAAA,cAACO,EAAA,IAAG,CAACqF,GAAG,KACN5F,EAAA,qBACEY,IAAK7E,EACL8E,IAAI,yBACJL,UAAU,gCAKlBR,EAAA,wBACEA,EAAA,cAACO,EAAA,IAAG,CAACC,UAAU,0BACbR,EAAA,cAACO,EAAA,GAAE,CACDsF,KAAK,QACL7D,GAAG,SACHtB,KAAK,KACL+E,MAAM,YACN3I,KAAK,SACL6D,QAAST,KAAKoE,SAASvJ,GACvB+K,aAAc5F,KAAKyE,yBAAyB5J,GAC5CgL,aAAc7F,KAAKyE,yBAAyB5J,GAC5CyF,UAAU,kBAEZR,EAAA,cAACO,EAAA,GAAE,CACDsF,KAAK,OACL7D,GAAG,OACHtB,KAAK,KACL+E,MAAM,SACN3I,KAAK,SACL6D,QAAST,KAAKuE,OAAO1J,GACrB+K,aAAc5F,KAAK2E,uBAAuB9J,GAC1CgL,aAAc7F,KAAK2E,uBAAuB9J,GAC1CyF,UAAU,mBClIlC,MAUMwF,EAAqB,CACvB/J,yBACA4B,yBACA+G,uBbuYkC,CAAC9H,EAAc/B,IAAwBmB,IAC3E,IAC0BA,EAAS+B,EAAxB,eAATnB,EAAsD/B,EAAsC,KAC5F,MAAOkC,GACPf,EAASiC,EAAmBlB,Ma1Y5B6H,qBb4ZgC,CAAChI,EAAc/B,IAAwBmB,IACzE,IAC0BA,EAASkC,EAAxB,eAATtB,EAAoD/B,EAAoC,KACxF,MAAOkC,GACPf,EAASiC,EAAmBlB,Ma/Z5BS,WACA8H,cb0PyB,CAAC1G,EAAyCe,EAA4BuF,IAAwC5B,MAAOtH,IAChJA,EA5B+B,CAC/BY,KAAM,iBA4BN,IACE,MAAMiC,EAAc,GACpBxC,OAAOmJ,OAAO5G,GAAemH,KAAK,CAACC,EAAEC,IAf1B,EAACD,EAAWC,EAAWtG,IACnB,QAAjBA,EAEEqG,EAAIC,EAEF,GAAK,EAEPD,EAAIC,GAED,EAAI,EAMoCC,CAAOF,EAAEd,GAAiBe,EAAEf,GAAiBvF,IACvF8F,IAAI,EAAG7K,YAAWC,MAAKC,aAAYe,SAAUgD,EAAYhE,GAAO,CAAED,YAAWC,MAAKC,aAAYe,QAC/F,MAAM4D,EAAa,CACjByF,iBACAvF,gBAGF3D,EAlCuB,EAAC6C,EAAuCc,EAA4BF,KAA4B,CACzHA,aACAE,eACA/C,KAAM,iBACNiC,gBA8BWsH,CAAYtH,EADrBc,EAAiC,QAAjBA,EAAyB,OAAS,MACFF,IAChD,MAAO1C,GACPf,EA7BqB,CAACe,IAAiB,CACzCA,MAAOA,EAAMC,QACbJ,KAAM,kBA2BKwJ,CAAUrJ,OapQR,IAAAsJ,EAAAhK,OAAA0E,EAAA,QAAA1E,CAnBS,EAAG2E,UAAapD,sBAAqB+B,eAAcF,aAAYzB,sBAAqBG,oBAAmBS,gBAAeC,mBAA2B,CACrKjB,sBACAI,sBACAG,oBACAsB,aACAE,eACAf,gBACAC,gBAYoCiH,EAAzB,CAA6C3B,GC2D7C,IAAAmC,GAzDf,cAAgCxG,EAAA,UAAhCC,kCAUSC,KAAAuG,WAAY,CAAC5J,GAA8B,EAAGuF,QAAUN,aAC7D5B,KAAKE,MAAMsG,gBAAgB7J,EAAOiF,KAV7B7B,oBACLC,KAAKE,MAAMuG,sBAEN1G,qBACL,MAAM5C,SAAEA,EAAQsF,MAAEA,EAAK9F,MAAEA,GAAUqD,KAAKE,MACpCuC,EAAMiE,OAAO7L,KAAO8B,GACtBQ,EAASR,EAAM8F,EAAMiE,OAAO7L,MAMzBkF,SACL,MAAMpD,MAAEA,EAAKiC,cAAEA,EAAaK,UAAEA,EAASP,QAAEA,EAAO+D,MAAEA,GAAUzC,KAAKE,MACjE,OACEJ,EAAA,cAACO,EAAA,UAAS,KACRP,EAAA,cAACO,EAAA,IAAG,CAACC,UAAU,QACbR,EAAA,cAACO,EAAA,IAAG,CAACsG,GAAG,KACN7G,EAAA,sBAAMQ,UAAU,WACdR,EAAA,uBACEnE,KAAK,YACLiB,KAAK,OACL0D,UAAU,oBACVe,YAAY,uCACZU,SAAU/B,KAAKuG,WAAW5J,MAG7BsC,EACGa,EAAA,cAACO,EAAA,IAAG,CAACC,UAAU,+BAA8BR,EAAA,cAAC8G,EAAAZ,EAAM,CAACpJ,KAAK,4BAA4BiK,QAAQ,KAC9FnI,EACEoB,EAAA,yFACkB,OAAlBlB,GACEvC,OAAOmJ,OAAO5G,GAAewD,OAAS,EACpCtC,EAAA,cAACuG,EAAa,MAEhBvG,EAAA,4DAGVA,EAAA,cAACO,EAAA,IAAG,CAACsG,GAAG,IAAIrG,UAAU,gBACpBR,EAAA,cAACO,EAAA,KAAI,KACHP,EAAA,cAACO,EAAA,SAAQ,KACNoC,EAAMiE,OAAO7L,IACV4H,EAAMiE,OAAOI,QAAkC,SAAxBrE,EAAMiE,OAAOI,OAClChH,EAAA,cAACmE,EAAQ,MACTnE,EAAA,cAACgB,EAAK,MACRhB,EAAA,cAAC4D,EAAW,aCnEhC,MAQMqD,GAAqB,CACvB5J,WACAqJ,gBfiN2B,CAAC3H,EAAuCmI,IAA0B1D,MAAOtH,IACtGA,EAhBiC,CACjCY,KAAM,mBAgBN,IACE,MAAMqK,EAAe5K,OAAOmJ,OAAO3G,GAAaqI,OAAO,EAAEtM,YAAWE,gBAAgBF,EAAUuM,cAAcC,SAASJ,IAAWlM,EAAWqM,cAAcC,SAASJ,IAC5JpI,EAAgB,GACtBqI,EAAaI,QAAQ,EAAGzM,YAAWC,MAAKC,aAAYe,SAAU+C,EAAc/D,GAAO,CAAED,YAAWC,MAAKC,aAAYe,QAKjHG,EArByB,EAAC4C,EAAyCa,KAA2B,CAChGA,aACA7C,KAAM,mBACNgC,kBAkBW0I,CAAc1I,EAJQ,CAC7BsG,eAAgB,QAChBvF,aAAc,WAGhB,MAAO5C,GACPf,EAjBuB,CAACe,IAAiB,CAC3CA,MAAOA,EAAMC,QACbJ,KAAM,oBAeK2K,CAAYxK,Me5NrB0J,oBfmL+B,IAAanD,MAAOtH,EAAUC,GAAYC,WAC3EF,EAf8B,CAC9BY,KAAM,qBAeN,IAEEZ,EAdsB,CAACW,IAAoC,CAC7DC,KAAM,qBACND,UAYW6K,QADWtL,EAAKE,IAAI,SAASqL,KAAK,UACjB3K,QAC1B,MAAOC,GACPf,EAASkB,EAASH,OetLP,IAAA2K,GAAArL,OAAA0E,EAAA,QAAA1E,CAdS,EAAG2E,UAAYtC,UAASO,YAAWtC,QAAOiC,gBAAeC,mBAA2B,CACxGH,UACAO,YACAtC,QACAiC,gBACAC,gBASoCkI,GAAzB,CAA6CT,ICA5D,MAAMqB,GAAUtL,OAAAuL,EAAA,EAAAvL,GAEVwL,GAAmBC,OAAOC,sCAAwCC,EAAA,EAElEC,GAAQ5L,OAAA2L,EAAA,EAAA3L,ChBinBC,CAAC6L,GAAqB7L,OAAA2L,EAAA,EAAA3L,CAAgB,CACnD2E,SAAU5C,EACVwE,KAAMuF,EAAA,EACNC,OAAQ/L,OAAAC,EAAA,cAAAD,CAAc6L,KgBnnBtBG,CAAkBV,IAClBE,GACExL,OAAA2L,EAAA,EAAA3L,CACEiM,EAAA,EAAMC,kBAAkB,CAAErM,KAAAzB,EAAM0B,QAAAzB,IAChC2B,OAAAC,EAAA,iBAAAD,CAAiBsL,OAiBvBtL,OAAAmM,EAAA,OAAAnM,CAAOyD,EAAA,cAZM,IACXA,EAAA,cAACiB,EAAA,SAAQ,CAACkH,MAAOA,IACfnI,EAAA,cAACxD,EAAA,gBAAe,CAAC4L,QAASP,IACxB7H,EAAA,yBACEA,EAAA,cAAC2I,EAAA,EAAM,KACL3I,EAAA,cAAC4I,EAAA,EAAK,CAACC,KAAM,kBAAmBxF,UAAWuE,SAOzC,MAAKkB,SAASC,cAAc","file":"static/js/main.d9c68290.chunk.js","sourcesContent":["import * as firebase from 'firebase'\n\nconst config = {\n  apiKey: \"AIzaSyDaBb-y1E-RB70QGIYnyz2xI_8ZDkhoC1c\",\n  authDomain: \"reactlistwithfirebase.firebaseapp.com\",\n  databaseURL: \"https://reactlistwithfirebase.firebaseio.com\",\n  messagingSenderId: \"164262586929\",\n  projectId: \"reactlistwithfirebase\",\n  storageBucket: \"reactlistwithfirebase.appspot.com\"\n};\nfirebase.initializeApp(config);\nexport const base = firebase.database();\nexport const storage = firebase.storage();\n","import { connectRouter, push } from 'connected-react-router';\nimport { History } from 'history';\nimport { Action, combineReducers } from 'redux';\nimport { reducer as formReducer, reset } from 'redux-form';\nimport { ThunkAction } from 'redux-thunk';\nimport typeToReducer from 'type-to-reducer';\nimport { ExtraArgument, SortByColumn, SortColumn, SortingOrder, UserDetails, UsersList } from './interfaces';\n\n// ----- Definicja stałych -----\n\nconst INITIAL_FILENAME = 'Wybierz plik';\n\n// -----------------------------\n\n// ---------------- Interfejsy i typy ----------------\n\nexport interface State {\n  firebase: {\n    fileName: string,\n    listElementIsEdited: string,\n    isError: false,\n    isLoading: false,\n    isUploading: false,\n    listElementToDelete: string,\n    listElementToEdit: string,\n    sortColumn: SortColumn,\n    sortingOrder: SortingOrder,\n    user: UserDetails['user'],\n    users: UsersList['users'],\n    usersFiltered: UsersList['users'],\n    usersSorted: UsersList['users'],\n  }\n};\n\ninterface AddUserToFirebase { firstName: string, key: string, secondName: string, uploadFile: string[] };\n\ntype FirebaseReducer = State['firebase'];\n\ntype ResetFileName = 'Wybierz plik';\n\ntype Thunk = ThunkAction<void, State, ExtraArgument, Action>;\n\n// ---------------------------------------------------\n\n// ----------------- Definicja akcji -----------------\n\nconst PENDING = 'PENDING';\nconst REJECTED = 'REJECTED';\nconst FULFILLED = 'FULFILLED';\nconst CREATE = 'CREATE';\nconst RETRIEVE = 'RETRIEVE';\nconst DELETE = 'DELETE';\nconst EDIT = 'EDIT';\nconst UPDATE = 'UPDATE';\nconst DETAILS = 'DETAILS';\nconst DELETE_HOVER = 'DELETE_HOVER';\nconst EDIT_HOVER = 'EDIT_HOVER';\nconst FILTER = 'FILTER';\nconst SORT = 'SORT';\nconst GET_FILE_NAME = 'GET_FILE_NAME';\n\n// ---------------------------------------------------\n\n// --------------- Inicjalizacja stanu ---------------\n\nconst baseInitialState = {\n  fileName: 'Wybierz plik',\n  isError: false,\n  isLoading: false,\n  isUploading: false,\n  listElementIsEdited: '',\n  listElementToDelete: '',\n  listElementToEdit: '',\n  sortColumn: {},\n  sortingOrder: 'asc',\n  user: {},\n  users: {},\n  usersFiltered: {}\n};\n\n// ----------------------------------------------------\n\n// --- Wstawianie pliku do Storage Firebase oraz zapis rekordu do Database Firebase ---\n\nconst addUser = (\n  { firstName, key, secondName, uploadFile }: AddUserToFirebase, \n  usersRef: firebase.database.Reference, \n  pictureRef: firebase.storage.Reference\n  ) => {\n  if (key === undefined) {\n    key = Date.now().toString();\n  }\n  pictureRef.child(key).put(uploadFile[0]).then((snapshot) => {\n    pictureRef.child(snapshot.metadata.name).getDownloadURL().then((url: string) => {\n      usersRef.child(key).set({\n        firstName,\n        key,\n        secondName,\n        url\n      })\n    })\n  });\n}\n\n// ------------------------------------------------------------------------------------\n\n// ----------- Dodawanie użytkownika do bazy -----------\n\nexport const addPending = () => ({\n  type: `${CREATE}_${PENDING}`\n});\n\nexport const addSuccess = (users: FirebaseReducer['users'], fileName: string) => ({\n  fileName,\n  type: `${CREATE}_${FULFILLED}`,\n  users\n});\n\nexport const addError = (error: Error) => ({\n  error: error.message,\n  type: `${CREATE}_${REJECTED}`\n});\n\nexport const addUserToFirebase = (user: AddUserToFirebase): Thunk =>\n  async (dispatch, getState, { base, storage }) => {\n    dispatch(addPending());\n    const usersRef = base.ref('users');\n    const pictureRef = storage.ref('personalPicture');\n    const fileName = INITIAL_FILENAME;\n    try {\n      await addUser(user, usersRef, pictureRef);\n      usersRef.on('value', (data) => {\n        if (data) {\n          dispatch(addSuccess(data.val(), fileName))\n        }\n      });\n      dispatch(reset('List'));\n    } catch (error) {\n      dispatch(addError(error));\n    };\n  };\n\n// ---------------------------------------------------\n\n// ----------- Usunięcie użytkownika z bazy -----------\n\nexport const deleteSuccess = (users: FirebaseReducer['users']) => ({\n  type: `${DELETE}_${FULFILLED}`,\n  users\n});\n\nexport const deleteError = (error: Error) => ({\n  error: error.message,\n  type: `${DELETE}_${REJECTED}`\n});\n\nexport const deleteUserFromFirebase = (key: string): Thunk =>\n  (dispatch, getState, { base, storage }) => {\n    const usersRef = base.ref('users');\n    const pictureRef = storage.ref('personalPicture');\n    try {\n      dispatch(push('/'));\n      usersRef.child(`${key}`).remove().then(\n        () => pictureRef.child(`${key}`).delete().then(\n          () => usersRef.on('value', (data) => {\n            if (data) {\n              dispatch(deleteSuccess(data.val()))\n            }\n          })\n        )\n      );\n    } catch (error) {\n      dispatch(deleteError(error));\n    };\n  };\n\n// ---------------------------------------------------\n\n// ------- Pobranie listy użytkowników z bazy -------\n\nexport const getPending = () => ({\n  type: `${RETRIEVE}_${PENDING}`\n});\n\nexport const getSuccess = (users: FirebaseReducer['users']) => ({\n  type: `${RETRIEVE}_${FULFILLED}`,\n  users\n});\n\nexport const getError = (error: Error) => ({\n  error: error.message,\n  type: `${RETRIEVE}_${REJECTED}`,\n});\n\nexport const getUserFromFirebase = (): Thunk => async (dispatch, getState, { base }) => {\n  dispatch(getPending());\n  try {\n    const users = await base.ref('users').once('value');\n    dispatch(getSuccess(users.val()));\n  } catch (error) {\n    dispatch(getError(error));\n  };\n};\n\n// --------------------------------------------------\n\n// --------- Filtrowanie listy użytkowników ---------\n\nexport const filterPending = () => ({\n  type: `${FILTER}_${PENDING}`\n});\n\nexport const filterSuccess = (usersFiltered: FirebaseReducer['users'], sortColumn: SortColumn) => ({\n  sortColumn,\n  type: `${FILTER}_${FULFILLED}`,\n  usersFiltered,\n});\n\nexport const filterError = (error: Error) => ({\n  error: error.message,\n  type: `${FILTER}_${REJECTED}`,\n});\n\nexport const filterUsersList = (usersSorted: FirebaseReducer['users'], phrase: string): Thunk => async (dispatch) => {\n  dispatch(filterPending());\n  try {    \n    const filteredList = Object.values(usersSorted).filter(({firstName, secondName}) => firstName.toLowerCase().includes(phrase) || secondName.toLowerCase().includes(phrase));\n    const usersFiltered = {};\n    filteredList.forEach(({ firstName, key, secondName, url }) => usersFiltered[key] = { firstName, key, secondName, url });\n    const sortColumn: SortColumn = {\n      sortedByColumn: 'reset',\n      sortingOrder: 'reset'\n    };\n    dispatch(filterSuccess(usersFiltered, sortColumn));\n  } catch (error) {\n    dispatch(filterError(error));\n  };\n};\n\n// --------------------------------------------------\n\n// --------- Sortowanie listy użytkowników ---------\n\nexport const sortPending = () => ({\n  type: `${SORT}_${PENDING}`\n});\n\nexport const sortSuccess = (usersSorted: FirebaseReducer['users'], sortingOrder: SortingOrder, sortColumn: SortColumn) =>  ({\n  sortColumn,\n  sortingOrder,\n  type: `${SORT}_${FULFILLED}`,\n  usersSorted\n});\n\nexport const sortError = (error: Error) => ({\n  error: error.message,\n  type: `${SORT}_${REJECTED}`,\n});\n\nconst sortBy = (a: string, b: string, sortingOrder: SortingOrder) => \n  sortingOrder === 'asc'\n  ? \n    a > b\n    ? \n      1 : -1\n  : \n    a > b\n    ?\n      -1 : 1\n\nexport const sortUsersList = (usersFiltered: FirebaseReducer['users'], sortingOrder: SortingOrder, sortedByColumn: SortByColumn): Thunk => async (dispatch) => {\n  dispatch(sortPending());\n  try {\n    const usersSorted = {};\n    Object.values(usersFiltered).sort((a,b) => sortBy(a[sortedByColumn], b[sortedByColumn], sortingOrder))\n    .map(({ firstName, key, secondName, url }) => usersSorted[key] = { firstName, key, secondName, url });\n    const sortColumn = {\n      sortedByColumn,\n      sortingOrder\n    };\n    sortingOrder = (sortingOrder === 'asc')? 'desc' : 'asc';\n    dispatch(sortSuccess(usersSorted, sortingOrder, sortColumn));\n  } catch (error) {\n    dispatch(sortError(error));\n  };\n};\n\n// -------------------------------------------------\n\n// -- Edycja użytkownika - przekazanie jego danych --\n\nexport const editSuccess = (user: UserDetails['user']) => ({\n  type: `${EDIT}_${FULFILLED}`,\n  user\n})\nexport const editError = (error: Error) => ({\n  error: error.message,\n  type: `${EDIT}_${REJECTED}`,\n});\nexport const editUser = ( userData: UserDetails['user']): Thunk => (dispatch) => {\n  try {\n    const { firstName, key, secondName, url } = userData;\n    const user = {\n      firstName,\n      key,\n      secondName,\n      url,\n    };\n    dispatch(editSuccess(user));\n  } catch (error) {\n    dispatch(editError(error));\n  }\n}\n\n// --------------------------------------------------\n\n// --------- Aktualizacja danych użytkownika ---------\n\nexport const updateSuccess = (users: FirebaseReducer['users'], fileName: string) => ({\n  fileName,\n  listElementIsEdited: '',\n  type: `${UPDATE}_${FULFILLED}`,\n  users\n});\n\nexport const updateError = (error: Error) => ({\n  error: error.message,\n  type: `${UPDATE}_${REJECTED}`\n});\n\nexport const updateUserInFirebase = (user: AddUserToFirebase): Thunk =>\n  async (dispatch, getState, { base, storage }) => {\n    const usersRef = base.ref('users');\n    const pictureRef = storage.ref('personalPicture');\n    const fileName = INITIAL_FILENAME;\n    try {\n      await pictureRef.child(user.key).delete().then(() => addUser(user, usersRef, pictureRef));\n      usersRef.on('value', (data) => {\n        if (data) {\n          dispatch(updateSuccess(data.val(), fileName))\n        }\n      });\n      dispatch(reset('List'));\n      dispatch(push('/'));\n    } catch (error) {\n      dispatch(updateError(error));\n    };\n  };\n\n// ---------------------------------------------------\n\n// -------------------- Routing --------------------\n\nexport const redirectSuccess = (fileName: ResetFileName) => ({\n    fileName,\n    type: `${GET_FILE_NAME}_${FULFILLED}`\n});\n\nexport const redirectError = (error: Error) => ({\n  error: error.message,\n  type: `${GET_FILE_NAME}_${REJECTED}`\n});\n\nexport const redirect = (url: string): Thunk => (dispatch) => {\n  try { \n    dispatch(redirectSuccess(INITIAL_FILENAME));\n    dispatch(push(url));\n  } catch (error) {\n    dispatch(getError(error))\n  };\n}\n\n// -------------------------------------------------\n\n// --- Podświetlenie wybranego elementu w tabeli ---\n\nexport const detailsSuccess = (listElementIsEdited: string) => ({\n  listElementIsEdited,\n  type: `${DETAILS}_${FULFILLED}`\n});\n\nexport const detailsError = (error: Error) => ({\n  error: error.message,\n  type: `${DETAILS}_${REJECTED}`\n});\n\nexport const highligthChosenElement = (key: string): Thunk => (dispatch) => {\n  try {\n    dispatch(detailsSuccess(key))\n  } catch (error) {\n    dispatch(detailsError(error))\n  }\n}\n\n// -------------------------------------------------\n\n// --- Podświetlenie elementu na czerwono po wejściu na ikonę usunięcia ---\n\nexport const onDeleteHoverSuccess = (listElementToDelete: string) => ({\n  listElementToDelete,\n  type: `${DELETE_HOVER}_${FULFILLED}`\n});\n\nexport const onDeleteHoverError = (error: Error) => ({\n  error: error.message,\n  type: `${DELETE_HOVER}_${REJECTED}`\n});\n\nexport const onDeleteHoverHighlight = (type: string, key: string): Thunk => (dispatch) => {\n  try {\n    type === 'mouseenter' ? dispatch(onDeleteHoverSuccess(key)) : dispatch(onDeleteHoverSuccess(\"\"));\n  } catch (error) {\n    dispatch(onDeleteHoverError(error))\n  }\n}\n\n// ------------------------------------------------------------------------ \n\n// ----- Podświetlenie elementu na niebesko po wejściu na ikonę edycji -----\n\nexport const onEditHoverSuccess = (listElementToEdit: string) => ({\n  listElementToEdit,\n  type: `${EDIT_HOVER}_${FULFILLED}`\n});\n\nexport const onEditHoverError = (error: Error) => ({\n  error: error.message,\n  type: `${EDIT_HOVER}_${REJECTED}`\n});\n\nexport const onEditHoverHighlight = (type: string, key: string): Thunk => (dispatch) => {\n  try {\n    type === 'mouseenter' ? dispatch(onEditHoverSuccess(key)) : dispatch(onEditHoverSuccess(\"\"));\n  } catch (error) {\n    dispatch(onDeleteHoverError(error))\n  }\n}\n\n// -------------------------------------------------------------------------\n\n// ----- Pobranie nazwy pliku do costomowego uploadFile -----\n\nexport const getFileNameSuccess = (fileName: string) => ({\n  fileName,\n  type: `${GET_FILE_NAME}_${FULFILLED}`\n});\n\nexport const getFileNameError = (error: Error) => ({\n  error: error.message,\n  type: `${GET_FILE_NAME}_${REJECTED}`\n});\n\nexport const getFileName = ({target: {value}}: React.ChangeEvent<HTMLInputElement>): Thunk => (dispatch) => {\n  try {\n    const fileName = (value.length > 0)? value.slice(\"C:/\\fakepath\\/\".length) : INITIAL_FILENAME;\n    dispatch(getFileNameSuccess(fileName));\n  } catch (error) {\n    dispatch(onDeleteHoverError(error))\n  }\n}\n\n// -------------------------------------------------------------------------\n\nconst firebaseReducer = typeToReducer({\n  [CREATE]: {\n    FULFILLED: (state: FirebaseReducer, { fileName, users }: FirebaseReducer) => ({\n      ...state,\n      fileName,\n      isError: false,\n      isUploading: false,\n      users,\n      usersFiltered: users,\n      usersSorted: users\n    }),\n    PENDING: (state: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isUploading: true\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n      isUploading: false\n    }),\n  },\n  [RETRIEVE]: {\n    FULFILLED: (state: FirebaseReducer, { users }: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isLoading: false,\n      users,\n      usersFiltered: users,\n      usersSorted: users\n    }),\n    PENDING: (state: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isLoading: true\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n      isLoading: false\n    }),\n  },\n  [EDIT]: {\n    FULFILLED: (state: FirebaseReducer, { user }: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      user\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n    })\n  },\n  [DELETE]: {\n    FULFILLED: (state: FirebaseReducer, { users }: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      users,\n      usersFiltered: users,\n      usersSorted: users\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n    }),\n  },\n  [UPDATE]: {\n    FULFILLED: (state: FirebaseReducer, { fileName, listElementIsEdited, users }: FirebaseReducer) => ({\n      ...state,\n      fileName,\n      isError: false,\n      isUploading: false,\n      listElementIsEdited,\n      users,\n      usersFiltered: users,\n      usersSorted: users\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n      isUploading: false\n    }),\n  },\n  [DETAILS]: {\n    FULFILLED: (state: FirebaseReducer, { listElementIsEdited }: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isUploading: false,\n      listElementIsEdited,\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n      isUploading: false\n    }),\n  },\n  [DELETE_HOVER]: {\n    FULFILLED: (state: FirebaseReducer, { listElementToDelete }: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      listElementToDelete\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n    }),\n  },\n  [EDIT_HOVER]: {\n    FULFILLED: (state: FirebaseReducer, { listElementToEdit }: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      listElementToEdit\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n    }),\n  },\n  [FILTER]: {\n    FULFILLED: (state: FirebaseReducer, { sortColumn, usersFiltered }: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isLoading: false,\n      sortColumn,\n      usersFiltered,\n      usersSorted: usersFiltered\n    }),\n    PENDING: (state: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isLoading: true\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n      isLoading: false\n    }),\n  },\n  [SORT]: {\n    FULFILLED: (state: FirebaseReducer, { sortColumn, sortingOrder, usersSorted }: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isLoading: false,\n      sortColumn,\n      sortingOrder,\n      usersSorted\n    }),\n    PENDING: (state: FirebaseReducer) => ({\n      ...state,\n      isError: false,\n      isLoading: true\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n      isLoading: false\n    }),\n  },\n  [GET_FILE_NAME]: {\n    FULFILLED: (state: FirebaseReducer, { fileName }: FirebaseReducer) => ({\n      ...state,\n      fileName,\n      isError: false,\n      isLoading: false,\n    }),\n    REJECTED: (state: FirebaseReducer, { error }: { error: string }) => ({\n      ...state,\n      error,\n      isError: true,\n      isLoading: false\n    }),\n  }, \n}, baseInitialState);\n\nexport default (history: History) => combineReducers({\n  firebase: firebaseReducer,\n  form: formReducer,\n  router: connectRouter(history)\n});\n","import { MDBBtn } from \"mdbreact\";\nimport { Container, Row } from 'mdbreact';\nimport * as React from 'react';\nimport { Action, ActionCreator } from 'redux';\nimport { UserDetails } from '../../../../interfaces';\n\ninterface Props {\n  user: UserDetails['user'],\n  redirect: ActionCreator<Action>,\n  deleteUserFromFirebase: ActionCreator<Action>, \n  highligthChosenElement: ActionCreator<Action>\n};\n\nclass About extends React.Component<Props>{\n  public onHighlightBack = () => {\n    this.props.highligthChosenElement();\n    this.props.redirect('/');\n  }\n  public deleteUser = (userKey: string) => () => {\n    this.props.deleteUserFromFirebase(userKey)\n  }\n  public render(){\n    const { user: { firstName, secondName, key, url } } = this.props\n    return(\n      <Container>\n        <Row className=\"justify-content-center\">\n          <MDBBtn color=\"dark\" size=\"sm\" type=\"submit\" onClick={this.onHighlightBack}>Powrót</MDBBtn>\n          <MDBBtn color=\"danger\" size=\"sm\" type=\"submit\" onClick={this.deleteUser(key)}>Usuń</MDBBtn>\n        </Row>\n        {(firstName && secondName && url) &&\n          <Row className=\"py-4 justify-content-center\">\n            <img\n              src={url}\n              alt=\"Zdjęcie profilowe\"\n              className=\"rounded-circle w-75 h-75\"\n            />\n            <h4 className=\"font-weight-bold mb-3\">{firstName} {secondName}</h4>\n          </Row>}\n      </Container>\n    );\n  }; \n}\n\nexport default About;\n","import { connect } from 'react-redux';\nimport { deleteUserFromFirebase, highligthChosenElement, redirect, State } from '../../../../module';\nimport About from './About';\n\nconst mapStateToProps = ({ firebase: { user } }: State) => ({\n    user\n});\n\nconst mapDispatchToProps = {\n    deleteUserFromFirebase,\n    highligthChosenElement,\n    redirect\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(About);\n","import * as React from 'react';\nimport { WrappedFieldProps } from 'redux-form';\n\nenum PLACEHOLDER {\n  firstName = 'Imię',\n  secondName = 'Nazwisko',\n}\n\nconst InputText: React.FunctionComponent<WrappedFieldProps> = ({ input, meta: { error, submitFailed } }) => \n  <div>\n    <input type=\"text\" {...input} className=\"form-control mb-0\" placeholder={PLACEHOLDER[input.name]} autoComplete=\"off\" />\n    {(submitFailed) && ((error && <span className=\"p-1 bg-danger rounded text-white errorText\">{error}</span>))}\n  </div>\n\nexport default InputText;\n","import { connect } from 'react-redux';\nimport { State } from '../../module';\nimport InputText from './InputText'\n\nconst mapStateToProps = ({ firebase: { user } }: State) => ({\n    user\n});\n\nexport default connect(mapStateToProps, null)(InputText) as any;\n","import * as React from 'react';\nimport { Action, ActionCreator } from 'redux';\nimport { WrappedFieldProps } from 'redux-form';\n\ninterface Props {\n  fileName: string\n  getFileName: ActionCreator<Action>\n}\n\nconst UploadFile: React.FunctionComponent<Props & WrappedFieldProps> = ({ fileName, getFileName, input: { value, ...input }, meta: { error, submitFailed } }) => {\n  \n  return(\n    <div>\n      <div className=\"fileUpload btn btn-primary px-3 py-2\">\n          <span>{fileName}</span>\n          <input type=\"file\" className=\"my-0 p-5 upload\" {...input} id=\"uploadFile\" onChange={getFileName} accept=\"image/*\" />\n      </div>\n      <div>\n        {(submitFailed) && (error && <span className=\"p-1 bg-danger rounded text-white errorText\">{error}</span>)}\n      </div>\n    </div>\n  );\n}\n\nexport default UploadFile;\n","import { connect } from 'react-redux';\nimport { getFileName, State } from '../../module';\nimport UploadFile from './UploadFile';\n\nconst mapStateToProps = ({ firebase: { fileName } }: State) => ({\n    fileName\n});\n\nconst mapDispatchToProps = {\n    getFileName\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadFile) as any;\n","import { FormErrors } from 'redux-form';\n\ninterface FormData{\n  firstName?: string,\n  secondName?: string,\n  uploadFile?: FileList\n}\n\nexport const validate  = ({ firstName, secondName, uploadFile }: FormData): FormErrors<FormData> => {\n    const errors: FormErrors<FormData> = {};\n    \n    errors.firstName = firstName\n    ?\n      firstName.length > 2\n      ?\n      ''\n      :\n      'Imię musi składać się z co najmniej 3 liter'\n    :\n    'Podaj imię!'\n    \n    errors.secondName = secondName\n    ?\n    secondName.length > 2\n      ?\n      ''\n      :\n      'Nazwisko musi składać się z co najmniej 3 liter'\n    :\n    'Podaj nazwisko!'\n\n    errors.uploadFile = (uploadFile && uploadFile.length > 0)\n    ? \n      uploadFile[0].type.match(/image\\/*/)\n      ?\n      ''\n      :\n      'Wybierz plik graficzny' \n    : \n    'Wybierz plik!';\n    \n    return errors;\n}","import { MDBBtn } from \"mdbreact\";\nimport * as React from 'react';\nimport { Action, ActionCreator } from 'redux';\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\nimport InputText from '../../../../shared/InputText';\nimport UploadFile from '../../../../shared/UploadFile';\nimport { validate } from '../../../../validate';\n\ninterface Props {\n  addUserToFirebase: ActionCreator<Action>,\n}\n\nconst AddUserForm: React.FunctionComponent<Props & InjectedFormProps> = ({\n  handleSubmit,\n  addUserToFirebase,\n  pristine,\n  submitting,\n}) =>\n  <div>\n    <p className=\"h4 text-center py-4\">Wpisz dane użytkownika</p>\n    <form onSubmit={handleSubmit(addUserToFirebase)} className=\"md-form\">\n      <div>\n      <Field name=\"firstName\" component={InputText} />\n      </div>\n      <div>\n      <Field name=\"secondName\" component={InputText} />\n      </div>\n      <div>\n        <Field name=\"uploadFile\" component={UploadFile} />\n      </div>\n      <div className=\"mt-3\">\n        <MDBBtn color=\"success\" size=\"sm\" type=\"submit\" disabled={pristine || submitting}>Zapisz</MDBBtn>\n      </div>\n      \n    </form>\n  </div>\n  \nexport default reduxForm({\n  form: 'List',\n  validate\n})(AddUserForm);\n","import { connect } from 'react-redux';\nimport { addUserToFirebase } from '../../../../module';\nimport AddUserForm from './AddUserForm';\n\nconst mapDispatchToProps = {\n    addUserToFirebase\n};\n\nexport default connect(null, mapDispatchToProps)(AddUserForm);\n","import { MDBBtn } from \"mdbreact\";\nimport * as React from 'react';\nimport { Action, ActionCreator } from 'redux';\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\nimport InputText from '../../../../shared/InputText';\nimport UploadFile from '../../../../shared/UploadFile';\nimport {validate} from '../../../../validate';\n\ninterface Props {\n  redirect: ActionCreator<Action>,\n  updateUserInFirebase: ActionCreator<Action>,\n  editUser: ActionCreator<Action>,\n  highligthChosenElement: ActionCreator<Action>,\n};\n\nclass EditUser extends React.Component<Props & InjectedFormProps>{\n  public onHighlightBack = () =>  {\n    this.props.redirect('/');\n    this.props.highligthChosenElement();\n  };\n  public render(){\n    const { handleSubmit, pristine, submitting, updateUserInFirebase } = this.props\n    return(\n      <div>\n      <p className=\"h4 text-center py-4\">Zmień dane użytkownika</p>\n      <form onSubmit={handleSubmit(updateUserInFirebase)} className=\"md-form\">\n        <div>\n          <Field name=\"firstName\" component={InputText} />\n        </div>\n        <div>\n          <Field name=\"secondName\" component={InputText} />\n        </div>\n        <div>\n          <Field name=\"uploadFile\" component={UploadFile} />\n        </div>\n        <div className=\"mt-3\">\n          <MDBBtn color=\"dark\" size=\"sm\" type=\"submit\" onClick={this.onHighlightBack}>Powrót</MDBBtn>\n          <MDBBtn color=\"success\" size=\"sm\" type=\"submit\" disabled={pristine || submitting}>Zapisz</MDBBtn>\n        </div>\n      </form>\n    </div>\n    );\n  };\n};\n\nexport default reduxForm({\n  enableReinitialize: true,\n  form: 'Edit',\n  validate\n})(EditUser);\n","import { connect } from 'react-redux';\nimport { editUser, highligthChosenElement, redirect, State, updateUserInFirebase } from '../../../../module';\nimport EditUser from './EditUser';\n\nconst mapStateToProps = ({ firebase: { listElementIsEdited, user: { firstName, key, secondName, url } } }: State) => ({\n    initialValues: {\n        firstName,\n        key,\n        secondName,\n        url\n    },\n    listElementIsEdited\n});\n\nconst mapDispatchToProps = {\n    editUser,\n    highligthChosenElement,\n    redirect,\n    updateUserInFirebase\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditUser) as any;\n","import * as classNames from 'classnames'\nimport { Card, CardBody, Col, Fa, Row, Table, TableBody, TableHead } from 'mdbreact';\nimport * as React from 'react';\nimport { Action, ActionCreator } from 'redux';\nimport { SortByColumn, SortColumn, SortingOrder, UsersList } from '../../../../interfaces';\n\ninterface Props {\n  listElementIsEdited: string,\n  sortColumn: SortColumn,\n  sortingOrder: SortingOrder,\n  listElementToDelete: string,\n  listElementToEdit: string,\n  usersFiltered: UsersList['users'],\n  usersSorted: UsersList['users'],\n  redirect: ActionCreator<Action>,\n  deleteUserFromFirebase: ActionCreator<Action>,\n  highligthChosenElement: ActionCreator<Action>,\n  onDeleteHoverHighlight: ActionCreator<Action>,\n  onEditHoverHighlight: ActionCreator<Action>,\n  sortUsersList: ActionCreator<Action>\n};\n\nclass ShowUsersList extends React.Component<Props> {\n\n  public onDelete = (key: string) => (e: Event) => {\n    e.stopPropagation();\n    this.props.deleteUserFromFirebase(`${key}`)\n  }\n\n  public onEdit = (key: string) => (e: Event) => {\n    e.stopPropagation();\n    this.props.highligthChosenElement(key);\n    this.props.redirect(`/${key}/edit`);\n  }\n\n  public onDetails = (key: string) => () => {\n    this.props.highligthChosenElement(key);\n    this.props.redirect(`/${key}`);\n  }\n\n  public highlightElementToDelete = (key: string) => ({ type }: Event) => {\n    this.props.onDeleteHoverHighlight(type, key);\n  }\n\n  public highlightElementToEdit = (key: string) => ({ type }: Event) => {\n    this.props.onEditHoverHighlight(type, key);\n  }\n\n  public isActive = (key: string) => classNames({\n    \"bg-danger\": this.props.listElementToDelete === key,\n    \"bg-primary\": this.props.listElementToEdit === key,\n    \"disabled\": this.props.listElementIsEdited === key,\n    \"isActive\": this.props.listElementIsEdited === key,\n  });\n\n  public isSorted = (id: SortByColumn) => classNames({\n    [`fa fa-sort-${this.props.sortColumn? this.props.sortColumn.sortingOrder : ''}`]: this.props.sortColumn? this.props.sortColumn.sortedByColumn === id : '',\n    \"ml-1\": true,\n  });\n\n  public sortList = (usersFiltered: UsersList['users'], sortingOrder: SortingOrder, columnName: SortByColumn) => () => {\n    this.props.sortUsersList(usersFiltered, sortingOrder, columnName)\n  }\n\n  public render() {\n    const { sortingOrder, usersFiltered, usersSorted } = this.props;\n    return (\n      <Card>\n        <CardBody>\n          <h2 className=\"text-center mb-3\">LISTA UŻYTKOWNIKÓW</h2>\n          <Table>\n            <TableHead>\n              <tr>\n                <td\n                  onClick={this.sortList(usersFiltered, sortingOrder, 'firstName')}\n                  title=\"Sortuj\"\n                  className=\"font-weight-bold sortList\">\n                  Imię\n                  <i className={this.isSorted('firstName')} />\n                </td>\n                <td\n                  onClick={this.sortList(usersFiltered, sortingOrder, 'secondName')}\n                  title=\"Sortuj\" \n                  className=\"font-weight-bold sortList\">\n                  Nazwisko\n                  <i className={this.isSorted('secondName')} />\n                </td>\n                <td className=\"font-weight-bold text-center\">Zdjęcie</td>\n                <td className=\"font-weight-bold text-center\">Usuń/Edytuj</td>\n              </tr>\n            </TableHead>\n            <TableBody>\n              {Object.values(usersSorted).map(({ firstName, secondName, url, key }) =>\n                <tr\n                  key={key}\n                  onClick={this.onDetails(key)}\n                  className={this.isActive(key)}\n                  title=\"Wyświetl szczegóły o użytkowniku\"\n                >\n                  <td className=\"w-25\">{firstName}</td>\n                  <td className=\"w-25\">{secondName}</td>\n                  <td>\n                    <Row className=\"justify-content-center\">\n                      <Col sm=\"4\">\n                        <img\n                          src={url}\n                          alt=\"Zdjęcie profilowe\"\n                          className=\"img-fluid rounded-circle\"\n                        />\n                      </Col>\n                    </Row>\n                  </td>\n                  <td>\n                    <Row className=\"justify-content-center\">\n                      <Fa\n                        icon=\"trash\"\n                        id=\"delete\"\n                        size=\"lg\"\n                        title=\"Usuń\"\n                        type=\"submit\"\n                        onClick={this.onDelete(key)}\n                        onMouseEnter={this.highlightElementToDelete(key)}\n                        onMouseLeave={this.highlightElementToDelete(key)}\n                        className=\"mx-2 onDelete\"\n                      />\n                      <Fa\n                        icon=\"edit\"\n                        id=\"edit\"\n                        size=\"lg\"\n                        title=\"Edytuj\"\n                        type=\"submit\"\n                        onClick={this.onEdit(key)}\n                        onMouseEnter={this.highlightElementToEdit(key)}\n                        onMouseLeave={this.highlightElementToEdit(key)}\n                        className=\"mx-2\"\n                      />\n                    </Row>\n                  </td>\n                </tr>\n              )}\n            </TableBody>\n          </Table>\n        </CardBody>\n      </Card>\n    );\n  };\n}\n\nexport default ShowUsersList;\n","import { connect } from 'react-redux';\nimport { deleteUserFromFirebase, highligthChosenElement, onDeleteHoverHighlight, onEditHoverHighlight, redirect, sortUsersList, State } from '../../../../module';\nimport ShowUsersList from './ShowUsersList';\n\nconst mapStateToProps = ({ firebase: {  listElementIsEdited, sortingOrder, sortColumn, listElementToDelete, listElementToEdit, usersFiltered, usersSorted } }: State) => ({\n    listElementIsEdited,\n    listElementToDelete,\n    listElementToEdit,\n    sortColumn,\n    sortingOrder,\n    usersFiltered,\n    usersSorted\n});\n\nconst mapDispatchToProps = {\n    deleteUserFromFirebase,\n    highligthChosenElement,\n    onDeleteHoverHighlight,\n    onEditHoverHighlight,\n    redirect,\n    sortUsersList\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowUsersList);\n","import { Card, CardBody, Col, Container, Row } from 'mdbreact';\nimport * as React from 'react';\nimport Loader from 'react-loaders';\nimport { match as Match } from 'react-router';\nimport { Action, ActionCreator } from 'redux';\nimport { UserDetails, UsersList } from '../../interfaces';\nimport './AddUserToFirebase.css';\nimport './AddUserToFirebase.scss';\nimport About from './components/About';\nimport AddUserForm from './components/AddUserForm';\nimport EditUser from './components/EditUser';\nimport ShowUsersList from './components/ShowUsersList';\n\ninterface Props {\n  user: UserDetails['user'],\n  users: UsersList['users'],\n  usersFiltered: UsersList['users'],\n  match: Match<{ key: string, action: string }>,\n  isError: boolean,\n  isLoading: boolean,\n  editUser: ActionCreator<Action>,\n  filterUsersList: ActionCreator<Action>,\n  getUserFromFirebase: ActionCreator<Action>\n}\n\nclass AddUserToFirebase extends React.Component<Props> {\n  public componentDidMount() {\n    this.props.getUserFromFirebase();\n  }\n  public componentDidUpdate() {\n    const { editUser, match, users } = this.props;\n    if (match.params.key && users) {\n      editUser(users[match.params.key]);\n    }\n  }\n  public filterList =(users: UsersList['users']) => ({ target: { value } }: React.ChangeEvent<HTMLInputElement> ) => {\n    this.props.filterUsersList(users, value);\n  }\n  public render() {\n    const { users, usersFiltered, isLoading, isError, match } = this.props;\n    return (\n      <Container>\n        <Row className=\"mt-4\">\n          <Col lg=\"8\">\n            <form className=\"md-form\">\n              <input\n                name=\"filerList\"\n                type=\"text\"\n                className=\"form-control mb-2\"\n                placeholder=\"Wpisz poszukiwanego użytkownika\"\n                onChange={this.filterList(users)}\n              />\n            </form>\n            {isLoading\n              ? <Row className=\"justify-content-center mt-5\"><Loader type=\"ball-clip-rotate-multiple\" active={true} /></Row>\n              : isError\n                ? <p>Wystąpił błąd podczas pobierania danych!!!</p>\n                : usersFiltered !== null\n                  ? Object.values(usersFiltered).length > 0\n                    ? <ShowUsersList />\n                    : <h2>Brak listy do wyświetlenia</h2>\n                  : <h2>Brak listy do wyświetlenia</h2>\n            }\n          </Col>\n          <Col lg=\"4\" className=\"mt-3 mt-lg-0\">\n            <Card>\n              <CardBody>\n                {match.params.key\n                  ? match.params.action && match.params.action === 'edit'\n                    ? <EditUser />\n                    : <About />\n                  : <AddUserForm />\n                }\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default AddUserToFirebase;\n","import { connect } from 'react-redux';\nimport { editUser,filterUsersList, getUserFromFirebase, State } from '../../module';\nimport AddUserToFirebase from './AddUserToFirebase';\n\nconst mapStateToProps = ({ firebase: { isError, isLoading, users, usersFiltered, usersSorted } }: State) => ({\n    isError,\n    isLoading,\n    users,\n    usersFiltered,\n    usersSorted\n});\n\nconst mapDispatchToProps = {\n    editUser,\n    filterUsersList,\n    getUserFromFirebase,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUserToFirebase);\n","import 'bootstrap-css-only/css/bootstrap.min.css';\nimport { ConnectedRouter, routerMiddleware } from 'connected-react-router';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { createBrowserHistory } from 'history';\nimport 'mdbreact/dist/css/mdb.css';\nimport * as React from \"react\";\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { base, storage } from './database';\nimport './index.css';\nimport createRootReducer from './module';\nimport AddUserToFirebase from \"./routes/AddUserToFirebase\";\n\n\n\nconst history = createBrowserHistory();\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  createRootReducer(history),\n  composeEnhancers(\n    applyMiddleware(\n      thunk.withExtraArgument({ base, storage }),\n      routerMiddleware(history)\n    ),\n  )\n);\n\nconst List = () => (\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <Switch>\n          <Route path={`/:key?/:action?`} component={AddUserToFirebase} />\n        </Switch>\n      </div>\n    </ConnectedRouter>\n  </Provider>\n)\n\nrender(<List />, document.querySelector(\"#container\"));\n"],"sourceRoot":""}